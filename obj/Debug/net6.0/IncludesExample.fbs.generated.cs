
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the FlatSharp FBS to C# compiler (source hash: 6.2.1.PIu6tqL1zvsSEv5VuC3GjpcU5NcNAgT1ni6h9Lri4Pg=)
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading;
using System.Threading.Tasks;
using FlatSharp;
using FlatSharp.Attributes;
using FlatSharp.Internal;
#pragma warning disable 0618
#nullable enable
namespace FlatSharp.Compiler.Generated
{
    internal static class CloneHelpers_7a6cc3861c2e4b92a90ddaf678ff8ef7
    {
        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static global::Samples.IncludesExample.EnumFromB Clone(global::Samples.IncludesExample.EnumFromB item)
        {
            checked
            {
                return item;
            }
        }

        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static global::System.Byte Clone(global::System.Byte item)
        {
            checked
            {
                return item;
            }
        }

        [return: System.Diagnostics.CodeAnalysis.NotNullIfNotNull("item")]
        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static global::Samples.IncludesExample.Request? Clone(global::Samples.IncludesExample.Request? item)
        {
            checked
            {
                return item is null ? null : new Samples.IncludesExample.Request(item);
            }
        }

        [return: System.Diagnostics.CodeAnalysis.NotNullIfNotNull("item")]
        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static global::Samples.IncludesExample.TableFromA? Clone(global::Samples.IncludesExample.TableFromA? item)
        {
            checked
            {
                return item is null ? null : new Samples.IncludesExample.TableFromA(item);
            }
        }

        [return: System.Diagnostics.CodeAnalysis.NotNullIfNotNull("item")]
        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static global::Samples.IncludesExample.TableFromB? Clone(global::Samples.IncludesExample.TableFromB? item)
        {
            checked
            {
                return item is null ? null : new Samples.IncludesExample.TableFromB(item);
            }
        }

        [return: System.Diagnostics.CodeAnalysis.NotNullIfNotNull("item")]
        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static global::Samples.IncludesExample.TableFromC? Clone(global::Samples.IncludesExample.TableFromC? item)
        {
            checked
            {
                return item is null ? null : new Samples.IncludesExample.TableFromC(item);
            }
        }

        [return: System.Diagnostics.CodeAnalysis.NotNullIfNotNull("item")]
        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static global::System.String? Clone(global::System.String? item)
        {
            checked
            {
                return item;
            }
        }

        [return: System.Diagnostics.CodeAnalysis.NotNullIfNotNull("item")]
        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static global::Samples.IncludesExample.StructFromA? Clone(global::Samples.IncludesExample.StructFromA? item)
        {
            checked
            {
                return item is null ? null : new Samples.IncludesExample.StructFromA(item);
            }
        }

        [return: System.Diagnostics.CodeAnalysis.NotNullIfNotNull("item")]
        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static global::Samples.IncludesExample.StructFromB? Clone(global::Samples.IncludesExample.StructFromB? item)
        {
            checked
            {
                return item is null ? null : new Samples.IncludesExample.StructFromB(item);
            }
        }

        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static global::System.Int32 Clone(global::System.Int32 item)
        {
            checked
            {
                return item;
            }
        }

        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static global::System.Int64 Clone(global::System.Int64 item)
        {
            checked
            {
                return item;
            }
        }
    }

}

namespace Samples.IncludesExample
{
    [FlatBufferTable()]
    [System.Runtime.CompilerServices.CompilerGenerated]
    public partial class Request
        : object
        , IFlatBufferSerializable<Samples.IncludesExample.Request>
    {
#pragma warning disable CS8618
        public Request()
        {
            checked
            {
                this.Table = default!;
                this.OnInitialized(null);
            }
        }

#pragma warning restore CS8618
#pragma warning disable CS8618
        protected Request(FlatBufferDeserializationContext context)
        {
            checked
            {
            }
        }

#pragma warning restore CS8618
        public Request(Request source)
        {
            checked
            {
                this.Table = FlatSharp.Compiler.Generated.CloneHelpers_7a6cc3861c2e4b92a90ddaf678ff8ef7.Clone(source.Table);
                this.OnInitialized(null);
            }
        }

        partial void OnInitialized(FlatBufferDeserializationContext? context);
        protected void OnFlatSharpDeserialized(FlatBufferDeserializationContext? context) => this.OnInitialized(context);


        [FlatBufferItemAttribute(0)]
        public virtual Samples.IncludesExample.TableFromA? Table { get; set; }
        public static ISerializer<Samples.IncludesExample.Request> Serializer { get; } = new GeneratedSerializer().AsISerializer();

        ISerializer IFlatBufferSerializable.Serializer => Serializer;
        ISerializer<Samples.IncludesExample.Request> IFlatBufferSerializable<Samples.IncludesExample.Request>.Serializer => Serializer;

        #region Serializer for Samples.IncludesExample.Request

        [FlatSharpGeneratedSerializerAttribute(FlatBufferDeserializationOption.GreedyMutable)]
        private sealed class GeneratedSerializer : IGeneratedSerializer<global::Samples.IncludesExample.Request>
        {
            // Method generated to help AOT compilers make good decisions about generics.
            public void __AotHelper()
            {
                checked
                {
                    this.Write<ISpanWriter>(default!, new byte[10], default!, default!, default!);
                    this.Write<SpanWriter>(default!, new byte[10], default!, default!, default!);

                    this.Parse<IInputBuffer>(default!, 0);
                    this.Parse<MemoryInputBuffer>(default!, 0);
                    this.Parse<ReadOnlyMemoryInputBuffer>(default!, 0);
                    this.Parse<ArrayInputBuffer>(default!, 0);
                    this.Parse<ArraySegmentInputBuffer>(default!, 0);

                    throw new InvalidOperationException("__AotHelper is not intended to be invoked");
                }
            }

            public GeneratedSerializer()
            {
                checked
                {
                    string? runtimeVersion = System.Reflection.CustomAttributeExtensions.GetCustomAttribute<System.Reflection.AssemblyFileVersionAttribute>(typeof(SpanWriter).Assembly)?.Version;
                    string compilerVersion = "6.2.1";

                    if (runtimeVersion != compilerVersion)
                    {
                        throw new InvalidOperationException($"FlatSharp runtime version didn't match compiler version. Ensure all FlatSharp NuGet packages use the same version. Runtime = '{runtimeVersion}', Compiler = '{compilerVersion}'.");
                    }

                    if (string.IsNullOrEmpty(runtimeVersion))
                    {
                        throw new InvalidOperationException($"Unable to find FlatSharp.Runtime version. Ensure all FlatSharp NuGet packages use the same version. Runtime = '{runtimeVersion}', Compiler = '{compilerVersion}'.");
                    }
                }
            }

            public FlatSharp.FlatBufferDeserializationOption DeserializationOption => FlatSharp.FlatBufferDeserializationOption.GreedyMutable;


            public void Write<TSpanWriter>(TSpanWriter writer, Span<byte> target, global::Samples.IncludesExample.Request root, int offset, SerializationContext context)
                where TSpanWriter : ISpanWriter
            {
                checked
                {
                    WriteInlineValueOf_c72f2fedcf1145e68532f77b33a62d0e(writer, target, root, offset, context);
                }
            }

            public int GetMaxSize(global::Samples.IncludesExample.Request root)
            {
                checked
                {
                    return GetMaxSizeOf_c72f2fedcf1145e68532f77b33a62d0e(root);
                }
            }

            public global::Samples.IncludesExample.Request Parse<TInputBuffer>(TInputBuffer buffer, int offset)
                where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return Read_c72f2fedcf1145e68532f77b33a62d0e(buffer, offset);
                }
            }

            private static int GetMaxSizeOf_c72f2fedcf1145e68532f77b33a62d0e(global::Samples.IncludesExample.Request value)
            {
                checked
                {

                    int runningSum = 14 + 7;
                    var index0Value = value.Table;

                    if (!(index0Value is null))
                    {
                        runningSum += GetMaxSizeOf_f4044f43ee024eec9dea6449b3632953(index0Value);
                    }
                    return runningSum;

                }
            }

            private static global::Samples.IncludesExample.Request Read_c72f2fedcf1145e68532f77b33a62d0e<TInputBuffer>(
                TInputBuffer buffer,
                int offset
                ) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return tableReader_ebcdc0ca623b42b083554b9b5ebe7691<TInputBuffer>.GetOrCreate(buffer, offset + buffer.ReadUOffset(offset));
                }
            }

            private sealed class tableReader_ebcdc0ca623b42b083554b9b5ebe7691<TInputBuffer>
                : global::Samples.IncludesExample.Request
                , global::FlatSharp.IFlatBufferDeserializedObject
                where TInputBuffer : IInputBuffer
            {
                private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                    = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.GreedyMutable);



                private Samples.IncludesExample.TableFromA? __index0Value;

                public static tableReader_ebcdc0ca623b42b083554b9b5ebe7691<TInputBuffer> GetOrCreate(TInputBuffer buffer, int offset)
                {
                    checked
                    {

                        var item = new tableReader_ebcdc0ca623b42b083554b9b5ebe7691<TInputBuffer>(buffer, offset);
                        return item;

                    }
                }

                private tableReader_ebcdc0ca623b42b083554b9b5ebe7691(TInputBuffer buffer, int offset) : base(__CtorContext)
                {
                    checked
                    {
                        VTable4.Create<TInputBuffer>(buffer, offset, out var vtable);
                        this.__index0Value = ReadIndex0Value(buffer, offset, vtable);
                        base.OnFlatSharpDeserialized(__CtorContext);
                    }
                }

                global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(Samples.IncludesExample.Request);
                global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
                global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => null;
                bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => false;


                public override Samples.IncludesExample.TableFromA? Table
                {
                    get
                    {
                        checked
                        {
                            return this.__index0Value;
                        }
                    }

                    set
                    {
                        checked
                        {
                            this.__index0Value = value;
                        }
                    }
                }

                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static Samples.IncludesExample.TableFromA? ReadIndex0Value(
                    TInputBuffer buffer,
                    int offset,
                    VTable4 vtable)
                {
                    checked
                    {


                        int absoluteLocation;
                        {
                            int relativeOffset = vtable.OffsetOf(buffer, 0);
                            if (relativeOffset == 0)
                            {
                                return null;
                            }

                            absoluteLocation = offset + relativeOffset;
                        }

                        return Read_f4044f43ee024eec9dea6449b3632953(buffer, absoluteLocation);
                    }
                }
            }



            private static void WriteInlineValueOf_c72f2fedcf1145e68532f77b33a62d0e<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                global::Samples.IncludesExample.Request value,
                int offset
                , SerializationContext context
                ) where TSpanWriter : ISpanWriter
            {
                checked
                {

                    int tableStart = context.AllocateSpace(11, sizeof(int));
                    spanWriter.WriteUOffset(span, offset, tableStart);
                    int currentOffset = tableStart + sizeof(int); // skip past vtable soffset_t.

                    int vtableLength = 4;
                    Span<byte> vtable = stackalloc byte[6];

                    var index0Value = value.Table;

                    var index0Offset = tableStart;
                    if (!(index0Value is null))
                    {

                        currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 4);
                        index0Offset = currentOffset;
                        currentOffset += 4;

                        vtableLength = 6;
                    }

                    spanWriter.WriteUShort(vtable, (ushort)(index0Offset - tableStart), 4);
                    int tableLength = currentOffset - tableStart;
                    context.Offset -= 11 - tableLength;
                    spanWriter.WriteUShort(vtable, (ushort)vtableLength, 0);
                    spanWriter.WriteUShort(vtable, (ushort)tableLength, sizeof(ushort));
                    int vtablePosition = context.FinishVTable(span, vtable.Slice(0, vtableLength));
                    spanWriter.WriteInt(span, tableStart - vtablePosition, tableStart);

                    if (index0Offset != tableStart)
                    {


                        WriteInlineValueOf_f4044f43ee024eec9dea6449b3632953(spanWriter, span, index0Value!, index0Offset, context);

                    }

                }
            }

            private static class tableMetadata_2161aa59e3c94126909cdc618ab21e77
            {

                public static readonly TableFieldContext Table = new TableFieldContext(
                    "Samples.IncludesExample.Request.Table",
                    false,
                    false);
            }



            private static int GetMaxSizeOf_f4044f43ee024eec9dea6449b3632953(global::Samples.IncludesExample.TableFromA value)
            {
                checked
                {

                    int runningSum = 72 + 15;
                    var index0Value = value.NestedTableB;

                    if (!(index0Value is null))
                    {
                        runningSum += GetMaxSizeOf_ed0321fba0f7404b9a5f4314ae53b8c0(index0Value);
                    }
                    var index1Value = value.NestedTableC;

                    if (!(index1Value is null))
                    {
                        runningSum += GetMaxSizeOf_b255004948d54dae874df1fc0b32c982(index1Value);
                    }
                    return runningSum;

                }
            }

            private static global::Samples.IncludesExample.TableFromA Read_f4044f43ee024eec9dea6449b3632953<TInputBuffer>(
                TInputBuffer buffer,
                int offset
                ) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return tableReader_56de7b5e3425486fa5312b0b533d15a6<TInputBuffer>.GetOrCreate(buffer, offset + buffer.ReadUOffset(offset));
                }
            }

            private sealed class tableReader_56de7b5e3425486fa5312b0b533d15a6<TInputBuffer>
                : global::Samples.IncludesExample.TableFromA
                , global::FlatSharp.IFlatBufferDeserializedObject
                where TInputBuffer : IInputBuffer
            {
                private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                    = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.GreedyMutable);



                private Samples.IncludesExample.TableFromB? __index0Value;
                private Samples.IncludesExample.TableFromC? __index1Value;
                private Samples.IncludesExample.EnumFromB __index2Value;
                private Samples.IncludesExample.StructFromA? __index3Value;
                private Samples.IncludesExample.StructFromB? __index4Value;

                public static tableReader_56de7b5e3425486fa5312b0b533d15a6<TInputBuffer> GetOrCreate(TInputBuffer buffer, int offset)
                {
                    checked
                    {

                        var item = new tableReader_56de7b5e3425486fa5312b0b533d15a6<TInputBuffer>(buffer, offset);
                        return item;

                    }
                }

                private tableReader_56de7b5e3425486fa5312b0b533d15a6(TInputBuffer buffer, int offset) : base(__CtorContext)
                {
                    checked
                    {
                        VTable8.Create<TInputBuffer>(buffer, offset, out var vtable);
                        this.__index0Value = ReadIndex0Value(buffer, offset, vtable);
                        this.__index1Value = ReadIndex1Value(buffer, offset, vtable);
                        this.__index2Value = ReadIndex2Value(buffer, offset, vtable);
                        this.__index3Value = ReadIndex3Value(buffer, offset, vtable);
                        this.__index4Value = ReadIndex4Value(buffer, offset, vtable);
                        base.OnFlatSharpDeserialized(__CtorContext);
                    }
                }

                global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(Samples.IncludesExample.TableFromA);
                global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
                global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => null;
                bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => false;


                public override Samples.IncludesExample.TableFromB? NestedTableB
                {
                    get
                    {
                        checked
                        {
                            return this.__index0Value;
                        }
                    }

                    set
                    {
                        checked
                        {
                            this.__index0Value = value;
                        }
                    }
                }

                public override Samples.IncludesExample.TableFromC? NestedTableC
                {
                    get
                    {
                        checked
                        {
                            return this.__index1Value;
                        }
                    }

                    set
                    {
                        checked
                        {
                            this.__index1Value = value;
                        }
                    }
                }

                public override Samples.IncludesExample.EnumFromB NestedEnum
                {
                    get
                    {
                        checked
                        {
                            return this.__index2Value;
                        }
                    }

                    set
                    {
                        checked
                        {
                            this.__index2Value = value;
                        }
                    }
                }

                public override Samples.IncludesExample.StructFromA? NestedStruct1
                {
                    get
                    {
                        checked
                        {
                            return this.__index3Value;
                        }
                    }

                    set
                    {
                        checked
                        {
                            this.__index3Value = value;
                        }
                    }
                }

                public override Samples.IncludesExample.StructFromB? NestedStruct2
                {
                    get
                    {
                        checked
                        {
                            return this.__index4Value;
                        }
                    }

                    set
                    {
                        checked
                        {
                            this.__index4Value = value;
                        }
                    }
                }

                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static Samples.IncludesExample.TableFromB? ReadIndex0Value(
                    TInputBuffer buffer,
                    int offset,
                    VTable8 vtable)
                {
                    checked
                    {


                        int absoluteLocation;
                        {
                            int relativeOffset = vtable.OffsetOf(buffer, 0);
                            if (relativeOffset == 0)
                            {
                                return null;
                            }

                            absoluteLocation = offset + relativeOffset;
                        }

                        return Read_ed0321fba0f7404b9a5f4314ae53b8c0(buffer, absoluteLocation);
                    }
                }

                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static Samples.IncludesExample.TableFromC? ReadIndex1Value(
                    TInputBuffer buffer,
                    int offset,
                    VTable8 vtable)
                {
                    checked
                    {


                        int absoluteLocation;
                        {
                            int relativeOffset = vtable.OffsetOf(buffer, 1);
                            if (relativeOffset == 0)
                            {
                                return null;
                            }

                            absoluteLocation = offset + relativeOffset;
                        }

                        return Read_b255004948d54dae874df1fc0b32c982(buffer, absoluteLocation);
                    }
                }

                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static Samples.IncludesExample.EnumFromB ReadIndex2Value(
                    TInputBuffer buffer,
                    int offset,
                    VTable8 vtable)
                {
                    checked
                    {


                        int absoluteLocation;
                        {
                            int relativeOffset = vtable.OffsetOf(buffer, 2);
                            if (relativeOffset == 0)
                            {
                                return default(Samples.IncludesExample.EnumFromB);
                            }

                            absoluteLocation = offset + relativeOffset;
                        }

                        return Read_66754f170eda47fd99ffebc4986fe2eb(buffer, absoluteLocation);
                    }
                }

                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static Samples.IncludesExample.StructFromA? ReadIndex3Value(
                    TInputBuffer buffer,
                    int offset,
                    VTable8 vtable)
                {
                    checked
                    {


                        int absoluteLocation;
                        {
                            int relativeOffset = vtable.OffsetOf(buffer, 3);
                            if (relativeOffset == 0)
                            {
                                return null;
                            }

                            absoluteLocation = offset + relativeOffset;
                        }

                        return Read_999aa122b5054a97b9ac2911d90aea7d(buffer, absoluteLocation);
                    }
                }

                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static Samples.IncludesExample.StructFromB? ReadIndex4Value(
                    TInputBuffer buffer,
                    int offset,
                    VTable8 vtable)
                {
                    checked
                    {


                        int absoluteLocation;
                        {
                            int relativeOffset = vtable.OffsetOf(buffer, 4);
                            if (relativeOffset == 0)
                            {
                                return null;
                            }

                            absoluteLocation = offset + relativeOffset;
                        }

                        return Read_e82f1ecacde344f084b523acfed9d8b0(buffer, absoluteLocation);
                    }
                }
            }



            private static void WriteInlineValueOf_f4044f43ee024eec9dea6449b3632953<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                global::Samples.IncludesExample.TableFromA value,
                int offset
                , SerializationContext context
                ) where TSpanWriter : ISpanWriter
            {
                checked
                {

                    int tableStart = context.AllocateSpace(69, sizeof(int));
                    spanWriter.WriteUOffset(span, offset, tableStart);
                    int currentOffset = tableStart + sizeof(int); // skip past vtable soffset_t.

                    int vtableLength = 4;
                    Span<byte> vtable = stackalloc byte[14];

                    var index0Value = value.NestedTableB;
                    var index1Value = value.NestedTableC;
                    var index2Value = value.NestedEnum;
                    var index3Value = value.NestedStruct1;
                    var index4Value = value.NestedStruct2;

                    var index4Offset = tableStart;
                    if (!(index4Value is null))
                    {

                        currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 8);
                        index4Offset = currentOffset;
                        currentOffset += 16;


                        WriteInlineValueOf_e82f1ecacde344f084b523acfed9d8b0(spanWriter, span, index4Value!, index4Offset);

                        vtableLength = 14;
                    }

                    spanWriter.WriteUShort(vtable, (ushort)(index4Offset - tableStart), 12);

                    var index3Offset = tableStart;
                    if (!(index3Value is null))
                    {

                        currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 8);
                        index3Offset = currentOffset;
                        currentOffset += 20;


                        WriteInlineValueOf_999aa122b5054a97b9ac2911d90aea7d(spanWriter, span, index3Value!, index3Offset);


                        if (12 > vtableLength)
                        {
                            vtableLength = 12;
                        }
                    }

                    spanWriter.WriteUShort(vtable, (ushort)(index3Offset - tableStart), 10);

                    var index1Offset = tableStart;
                    if (!(index1Value is null))
                    {

                        currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 4);
                        index1Offset = currentOffset;
                        currentOffset += 4;


                        if (8 > vtableLength)
                        {
                            vtableLength = 8;
                        }
                    }

                    spanWriter.WriteUShort(vtable, (ushort)(index1Offset - tableStart), 6);

                    var index0Offset = tableStart;
                    if (!(index0Value is null))
                    {

                        currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 4);
                        index0Offset = currentOffset;
                        currentOffset += 4;


                        if (6 > vtableLength)
                        {
                            vtableLength = 6;
                        }
                    }

                    spanWriter.WriteUShort(vtable, (ushort)(index0Offset - tableStart), 4);

                    var index2Offset = tableStart;
                    if (index2Value != default(Samples.IncludesExample.EnumFromB))
                    {

                        currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 1);
                        index2Offset = currentOffset;
                        currentOffset += 1;


                        WriteInlineValueOf_66754f170eda47fd99ffebc4986fe2eb(spanWriter, span, index2Value, index2Offset);


                        if (10 > vtableLength)
                        {
                            vtableLength = 10;
                        }
                    }

                    spanWriter.WriteUShort(vtable, (ushort)(index2Offset - tableStart), 8);
                    int tableLength = currentOffset - tableStart;
                    context.Offset -= 69 - tableLength;
                    spanWriter.WriteUShort(vtable, (ushort)vtableLength, 0);
                    spanWriter.WriteUShort(vtable, (ushort)tableLength, sizeof(ushort));
                    int vtablePosition = context.FinishVTable(span, vtable.Slice(0, vtableLength));
                    spanWriter.WriteInt(span, tableStart - vtablePosition, tableStart);

                    if (index1Offset != tableStart)
                    {


                        WriteInlineValueOf_b255004948d54dae874df1fc0b32c982(spanWriter, span, index1Value!, index1Offset, context);

                    }


                    if (index0Offset != tableStart)
                    {


                        WriteInlineValueOf_ed0321fba0f7404b9a5f4314ae53b8c0(spanWriter, span, index0Value!, index0Offset, context);

                    }

                }
            }

            private static class tableMetadata_673a5ae5d6804153827767975fc3d27a
            {

                public static readonly TableFieldContext NestedTableB = new TableFieldContext(
                    "Samples.IncludesExample.TableFromA.NestedTableB",
                    false,
                    false);

                public static readonly TableFieldContext NestedTableC = new TableFieldContext(
                    "Samples.IncludesExample.TableFromA.NestedTableC",
                    false,
                    false);

                public static readonly TableFieldContext NestedEnum = new TableFieldContext(
                    "Samples.IncludesExample.TableFromA.NestedEnum",
                    false,
                    false);

                public static readonly TableFieldContext NestedStruct1 = new TableFieldContext(
                    "Samples.IncludesExample.TableFromA.NestedStruct1",
                    false,
                    false);

                public static readonly TableFieldContext NestedStruct2 = new TableFieldContext(
                    "Samples.IncludesExample.TableFromA.NestedStruct2",
                    false,
                    false);
            }



            private static int GetMaxSizeOf_ed0321fba0f7404b9a5f4314ae53b8c0(global::Samples.IncludesExample.TableFromB value)
            {
                checked
                {

                    int runningSum = 21 + 9;
                    var index0Value = value.NestedTableC;

                    if (!(index0Value is null))
                    {
                        runningSum += GetMaxSizeOf_b255004948d54dae874df1fc0b32c982(index0Value);
                    }
                    var index1Value = value.String;

                    if (!(index1Value is null))
                    {
                        runningSum += GetMaxSizeOf_a55e5f5acaf041a897499465a1d8b3ed(index1Value);
                    }
                    return runningSum;

                }
            }

            private static global::Samples.IncludesExample.TableFromB Read_ed0321fba0f7404b9a5f4314ae53b8c0<TInputBuffer>(
                TInputBuffer buffer,
                int offset
                ) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return tableReader_15914f3aea084e1d8309598761ae7993<TInputBuffer>.GetOrCreate(buffer, offset + buffer.ReadUOffset(offset));
                }
            }

            private sealed class tableReader_15914f3aea084e1d8309598761ae7993<TInputBuffer>
                : global::Samples.IncludesExample.TableFromB
                , global::FlatSharp.IFlatBufferDeserializedObject
                where TInputBuffer : IInputBuffer
            {
                private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                    = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.GreedyMutable);



                private Samples.IncludesExample.TableFromC? __index0Value;
                private System.String? __index1Value;

                public static tableReader_15914f3aea084e1d8309598761ae7993<TInputBuffer> GetOrCreate(TInputBuffer buffer, int offset)
                {
                    checked
                    {

                        var item = new tableReader_15914f3aea084e1d8309598761ae7993<TInputBuffer>(buffer, offset);
                        return item;

                    }
                }

                private tableReader_15914f3aea084e1d8309598761ae7993(TInputBuffer buffer, int offset) : base(__CtorContext)
                {
                    checked
                    {
                        VTable4.Create<TInputBuffer>(buffer, offset, out var vtable);
                        this.__index0Value = ReadIndex0Value(buffer, offset, vtable);
                        this.__index1Value = ReadIndex1Value(buffer, offset, vtable);
                        base.OnFlatSharpDeserialized(__CtorContext);
                    }
                }

                global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(Samples.IncludesExample.TableFromB);
                global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
                global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => null;
                bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => false;


                public override Samples.IncludesExample.TableFromC? NestedTableC
                {
                    get
                    {
                        checked
                        {
                            return this.__index0Value;
                        }
                    }

                    set
                    {
                        checked
                        {
                            this.__index0Value = value;
                        }
                    }
                }

                public override System.String? String
                {
                    get
                    {
                        checked
                        {
                            return this.__index1Value;
                        }
                    }

                    set
                    {
                        checked
                        {
                            this.__index1Value = value;
                        }
                    }
                }

                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static Samples.IncludesExample.TableFromC? ReadIndex0Value(
                    TInputBuffer buffer,
                    int offset,
                    VTable4 vtable)
                {
                    checked
                    {


                        int absoluteLocation;
                        {
                            int relativeOffset = vtable.OffsetOf(buffer, 0);
                            if (relativeOffset == 0)
                            {
                                return null;
                            }

                            absoluteLocation = offset + relativeOffset;
                        }

                        return Read_b255004948d54dae874df1fc0b32c982(buffer, absoluteLocation);
                    }
                }

                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static System.String? ReadIndex1Value(
                    TInputBuffer buffer,
                    int offset,
                    VTable4 vtable)
                {
                    checked
                    {


                        int absoluteLocation;
                        {
                            int relativeOffset = vtable.OffsetOf(buffer, 1);
                            if (relativeOffset == 0)
                            {
                                return null;
                            }

                            absoluteLocation = offset + relativeOffset;
                        }

                        return Read_a55e5f5acaf041a897499465a1d8b3ed(buffer, absoluteLocation);
                    }
                }
            }



            private static void WriteInlineValueOf_ed0321fba0f7404b9a5f4314ae53b8c0<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                global::Samples.IncludesExample.TableFromB value,
                int offset
                , SerializationContext context
                ) where TSpanWriter : ISpanWriter
            {
                checked
                {

                    int tableStart = context.AllocateSpace(18, sizeof(int));
                    spanWriter.WriteUOffset(span, offset, tableStart);
                    int currentOffset = tableStart + sizeof(int); // skip past vtable soffset_t.

                    int vtableLength = 4;
                    Span<byte> vtable = stackalloc byte[8];

                    var index0Value = value.NestedTableC;
                    var index1Value = value.String;

                    var index1Offset = tableStart;
                    if (!(index1Value is null))
                    {

                        currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 4);
                        index1Offset = currentOffset;
                        currentOffset += 4;

                        vtableLength = 8;
                    }

                    spanWriter.WriteUShort(vtable, (ushort)(index1Offset - tableStart), 6);

                    var index0Offset = tableStart;
                    if (!(index0Value is null))
                    {

                        currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 4);
                        index0Offset = currentOffset;
                        currentOffset += 4;


                        if (6 > vtableLength)
                        {
                            vtableLength = 6;
                        }
                    }

                    spanWriter.WriteUShort(vtable, (ushort)(index0Offset - tableStart), 4);
                    int tableLength = currentOffset - tableStart;
                    context.Offset -= 18 - tableLength;
                    spanWriter.WriteUShort(vtable, (ushort)vtableLength, 0);
                    spanWriter.WriteUShort(vtable, (ushort)tableLength, sizeof(ushort));
                    int vtablePosition = context.FinishVTable(span, vtable.Slice(0, vtableLength));
                    spanWriter.WriteInt(span, tableStart - vtablePosition, tableStart);

                    if (index1Offset != tableStart)
                    {


                        WriteInlineValueOf_a55e5f5acaf041a897499465a1d8b3ed(spanWriter, span, index1Value!, index1Offset, context, tableMetadata_2d609215e45641fcabdcbcc1f3fda0c8.String);

                    }


                    if (index0Offset != tableStart)
                    {


                        WriteInlineValueOf_b255004948d54dae874df1fc0b32c982(spanWriter, span, index0Value!, index0Offset, context);

                    }

                }
            }

            private static class tableMetadata_2d609215e45641fcabdcbcc1f3fda0c8
            {

                public static readonly TableFieldContext NestedTableC = new TableFieldContext(
                    "Samples.IncludesExample.TableFromB.NestedTableC",
                    false,
                    false);

                public static readonly TableFieldContext String = new TableFieldContext(
                    "Samples.IncludesExample.TableFromB.String",
                    false,
                    false);
            }



            private static int GetMaxSizeOf_b255004948d54dae874df1fc0b32c982(global::Samples.IncludesExample.TableFromC value)
            {
                checked
                {

                    int runningSum = 14 + 7;
                    var index0Value = value.String;

                    if (!(index0Value is null))
                    {
                        runningSum += GetMaxSizeOf_a55e5f5acaf041a897499465a1d8b3ed(index0Value);
                    }
                    return runningSum;

                }
            }

            private static global::Samples.IncludesExample.TableFromC Read_b255004948d54dae874df1fc0b32c982<TInputBuffer>(
                TInputBuffer buffer,
                int offset
                ) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return tableReader_c0e895a601804247bf363cab0296bac6<TInputBuffer>.GetOrCreate(buffer, offset + buffer.ReadUOffset(offset));
                }
            }

            private sealed class tableReader_c0e895a601804247bf363cab0296bac6<TInputBuffer>
                : global::Samples.IncludesExample.TableFromC
                , global::FlatSharp.IFlatBufferDeserializedObject
                where TInputBuffer : IInputBuffer
            {
                private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                    = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.GreedyMutable);



                private System.String? __index0Value;

                public static tableReader_c0e895a601804247bf363cab0296bac6<TInputBuffer> GetOrCreate(TInputBuffer buffer, int offset)
                {
                    checked
                    {

                        var item = new tableReader_c0e895a601804247bf363cab0296bac6<TInputBuffer>(buffer, offset);
                        return item;

                    }
                }

                private tableReader_c0e895a601804247bf363cab0296bac6(TInputBuffer buffer, int offset) : base(__CtorContext)
                {
                    checked
                    {
                        VTable4.Create<TInputBuffer>(buffer, offset, out var vtable);
                        this.__index0Value = ReadIndex0Value(buffer, offset, vtable);
                        base.OnFlatSharpDeserialized(__CtorContext);
                    }
                }

                global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(Samples.IncludesExample.TableFromC);
                global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
                global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => null;
                bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => false;


                public override System.String? String
                {
                    get
                    {
                        checked
                        {
                            return this.__index0Value;
                        }
                    }

                    set
                    {
                        checked
                        {
                            this.__index0Value = value;
                        }
                    }
                }

                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static System.String? ReadIndex0Value(
                    TInputBuffer buffer,
                    int offset,
                    VTable4 vtable)
                {
                    checked
                    {


                        int absoluteLocation;
                        {
                            int relativeOffset = vtable.OffsetOf(buffer, 0);
                            if (relativeOffset == 0)
                            {
                                return null;
                            }

                            absoluteLocation = offset + relativeOffset;
                        }

                        return Read_a55e5f5acaf041a897499465a1d8b3ed(buffer, absoluteLocation);
                    }
                }
            }



            private static void WriteInlineValueOf_b255004948d54dae874df1fc0b32c982<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                global::Samples.IncludesExample.TableFromC value,
                int offset
                , SerializationContext context
                ) where TSpanWriter : ISpanWriter
            {
                checked
                {

                    int tableStart = context.AllocateSpace(11, sizeof(int));
                    spanWriter.WriteUOffset(span, offset, tableStart);
                    int currentOffset = tableStart + sizeof(int); // skip past vtable soffset_t.

                    int vtableLength = 4;
                    Span<byte> vtable = stackalloc byte[6];

                    var index0Value = value.String;

                    var index0Offset = tableStart;
                    if (!(index0Value is null))
                    {

                        currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 4);
                        index0Offset = currentOffset;
                        currentOffset += 4;

                        vtableLength = 6;
                    }

                    spanWriter.WriteUShort(vtable, (ushort)(index0Offset - tableStart), 4);
                    int tableLength = currentOffset - tableStart;
                    context.Offset -= 11 - tableLength;
                    spanWriter.WriteUShort(vtable, (ushort)vtableLength, 0);
                    spanWriter.WriteUShort(vtable, (ushort)tableLength, sizeof(ushort));
                    int vtablePosition = context.FinishVTable(span, vtable.Slice(0, vtableLength));
                    spanWriter.WriteInt(span, tableStart - vtablePosition, tableStart);

                    if (index0Offset != tableStart)
                    {


                        WriteInlineValueOf_a55e5f5acaf041a897499465a1d8b3ed(spanWriter, span, index0Value!, index0Offset, context, tableMetadata_9d77cfa8df9d4fdc8d399fee469a84cf.String);

                    }

                }
            }

            private static class tableMetadata_9d77cfa8df9d4fdc8d399fee469a84cf
            {

                public static readonly TableFieldContext String = new TableFieldContext(
                    "Samples.IncludesExample.TableFromC.String",
                    false,
                    false);
            }



            private static int GetMaxSizeOf_a55e5f5acaf041a897499465a1d8b3ed(global::System.String value)
            {
                checked
                {
                    return SerializationHelpers.GetMaxSize(value);
                }
            }

            private static global::System.String Read_a55e5f5acaf041a897499465a1d8b3ed<TInputBuffer>(
                TInputBuffer buffer,
                int offset
                ) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return buffer.ReadString(offset);
                }
            }

            private static void WriteInlineValueOf_a55e5f5acaf041a897499465a1d8b3ed<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                global::System.String value,
                int offset
                , SerializationContext context
                , TableFieldContext fieldContext) where TSpanWriter : ISpanWriter
            {
                checked
                {

                    spanWriter.WriteString(
                        span,
                        value,
                        offset,
                        context);

                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static int GetMaxSizeOf_66754f170eda47fd99ffebc4986fe2eb(global::Samples.IncludesExample.EnumFromB value)
            {
                checked
                {
                    return GetMaxSizeOf_af7ed3af79774e898a7d96aad32eb0e3((global::System.Byte)value);
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static global::Samples.IncludesExample.EnumFromB Read_66754f170eda47fd99ffebc4986fe2eb<TInputBuffer>(
                TInputBuffer buffer,
                int offset
                ) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return (Samples.IncludesExample.EnumFromB)Read_af7ed3af79774e898a7d96aad32eb0e3(buffer, offset);
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static void WriteInlineValueOf_66754f170eda47fd99ffebc4986fe2eb<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                global::Samples.IncludesExample.EnumFromB value,
                int offset

                ) where TSpanWriter : ISpanWriter
            {
                checked
                {
                    WriteInlineValueOf_af7ed3af79774e898a7d96aad32eb0e3(spanWriter, span, (global::System.Byte)value, offset);
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static int GetMaxSizeOf_af7ed3af79774e898a7d96aad32eb0e3(global::System.Byte value)
            {
                checked
                {
                    return 1;
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static global::System.Byte Read_af7ed3af79774e898a7d96aad32eb0e3<TInputBuffer>(
                TInputBuffer buffer,
                int offset
                ) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return buffer.ReadByte(offset);
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static void WriteInlineValueOf_af7ed3af79774e898a7d96aad32eb0e3<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                global::System.Byte value,
                int offset

                ) where TSpanWriter : ISpanWriter
            {
                checked
                {
                    spanWriter.WriteByte(span, value, offset);
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static int GetMaxSizeOf_999aa122b5054a97b9ac2911d90aea7d(global::Samples.IncludesExample.StructFromA value)
            {
                checked
                {
                    return 27;
                }
            }

            private static global::Samples.IncludesExample.StructFromA Read_999aa122b5054a97b9ac2911d90aea7d<TInputBuffer>(
                TInputBuffer buffer,
                int offset
                ) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return structReader_226b75acc39e4193a466aa6992b67346<TInputBuffer>.GetOrCreate(buffer, offset);
                }
            }

            private sealed class structReader_226b75acc39e4193a466aa6992b67346<TInputBuffer>
                : global::Samples.IncludesExample.StructFromA
                , global::FlatSharp.IFlatBufferDeserializedObject
                where TInputBuffer : IInputBuffer
            {
                private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                    = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.GreedyMutable);



                private Samples.IncludesExample.StructFromB __index0Value;
                private System.Int32 __index1Value;

                public static structReader_226b75acc39e4193a466aa6992b67346<TInputBuffer> GetOrCreate(TInputBuffer buffer, int offset)
                {
                    checked
                    {

                        var item = new structReader_226b75acc39e4193a466aa6992b67346<TInputBuffer>(buffer, offset);
                        return item;

                    }
                }

                private structReader_226b75acc39e4193a466aa6992b67346(TInputBuffer buffer, int offset) : base(__CtorContext)
                {
                    checked
                    {
                        this.__index0Value = ReadIndex0Value(buffer, offset, default);
                        this.__index1Value = ReadIndex1Value(buffer, offset, default);
                        base.OnFlatSharpDeserialized(__CtorContext);
                    }
                }

                global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(Samples.IncludesExample.StructFromA);
                global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
                global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => null;
                bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => false;


                public override Samples.IncludesExample.StructFromB NestedStruct
                {
                    get
                    {
                        checked
                        {
                            return this.__index0Value;
                        }
                    }

                    set
                    {
                        checked
                        {
                            this.__index0Value = value;
                        }
                    }
                }

                public override System.Int32 Value
                {
                    get
                    {
                        checked
                        {
                            return this.__index1Value;
                        }
                    }

                    set
                    {
                        checked
                        {
                            this.__index1Value = value;
                        }
                    }
                }

                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static Samples.IncludesExample.StructFromB ReadIndex0Value(
                    TInputBuffer buffer,
                    int offset,
                    VTable4 vtable)
                {
                    checked
                    {
                        return Read_e82f1ecacde344f084b523acfed9d8b0(buffer, offset + 0);
                    }
                }

                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static System.Int32 ReadIndex1Value(
                    TInputBuffer buffer,
                    int offset,
                    VTable4 vtable)
                {
                    checked
                    {
                        return Read_bc87f771a2d34655b1177386c982166c(buffer, offset + 16);
                    }
                }
            }



            private static void WriteInlineValueOf_999aa122b5054a97b9ac2911d90aea7d<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                global::Samples.IncludesExample.StructFromA value,
                int offset

                ) where TSpanWriter : ISpanWriter
            {
                checked
                {
                    Span<byte> scopedSpan = span.Slice(offset, 20);

                    if (value is null)
                    {
                        scopedSpan.Clear();
                        return;
                    }

                    WriteInlineValueOf_e82f1ecacde344f084b523acfed9d8b0(spanWriter, scopedSpan, value.NestedStruct, 0);
                    WriteInlineValueOf_bc87f771a2d34655b1177386c982166c(spanWriter, scopedSpan, value.Value, 16);
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static int GetMaxSizeOf_e82f1ecacde344f084b523acfed9d8b0(global::Samples.IncludesExample.StructFromB value)
            {
                checked
                {
                    return 23;
                }
            }

            private static global::Samples.IncludesExample.StructFromB Read_e82f1ecacde344f084b523acfed9d8b0<TInputBuffer>(
                TInputBuffer buffer,
                int offset
                ) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return structReader_cded034695584a78a357821c9fb2d83c<TInputBuffer>.GetOrCreate(buffer, offset);
                }
            }

            private sealed class structReader_cded034695584a78a357821c9fb2d83c<TInputBuffer>
                : global::Samples.IncludesExample.StructFromB
                , global::FlatSharp.IFlatBufferDeserializedObject
                where TInputBuffer : IInputBuffer
            {
                private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                    = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.GreedyMutable);



                private System.Int32 __index0Value;
                private System.Int64 __index1Value;

                public static structReader_cded034695584a78a357821c9fb2d83c<TInputBuffer> GetOrCreate(TInputBuffer buffer, int offset)
                {
                    checked
                    {

                        var item = new structReader_cded034695584a78a357821c9fb2d83c<TInputBuffer>(buffer, offset);
                        return item;

                    }
                }

                private structReader_cded034695584a78a357821c9fb2d83c(TInputBuffer buffer, int offset) : base(__CtorContext)
                {
                    checked
                    {
                        this.__index0Value = ReadIndex0Value(buffer, offset, default);
                        this.__index1Value = ReadIndex1Value(buffer, offset, default);
                        base.OnFlatSharpDeserialized(__CtorContext);
                    }
                }

                global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(Samples.IncludesExample.StructFromB);
                global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
                global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => null;
                bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => false;


                public override System.Int32 IntValue
                {
                    get
                    {
                        checked
                        {
                            return this.__index0Value;
                        }
                    }

                    set
                    {
                        checked
                        {
                            this.__index0Value = value;
                        }
                    }
                }

                public override System.Int64 LongValue
                {
                    get
                    {
                        checked
                        {
                            return this.__index1Value;
                        }
                    }

                    set
                    {
                        checked
                        {
                            this.__index1Value = value;
                        }
                    }
                }

                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static System.Int32 ReadIndex0Value(
                    TInputBuffer buffer,
                    int offset,
                    VTable4 vtable)
                {
                    checked
                    {
                        return Read_bc87f771a2d34655b1177386c982166c(buffer, offset + 0);
                    }
                }

                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static System.Int64 ReadIndex1Value(
                    TInputBuffer buffer,
                    int offset,
                    VTable4 vtable)
                {
                    checked
                    {
                        return Read_8f6322dbf18f4a30925cd058157607c7(buffer, offset + 8);
                    }
                }
            }



            private static void WriteInlineValueOf_e82f1ecacde344f084b523acfed9d8b0<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                global::Samples.IncludesExample.StructFromB value,
                int offset

                ) where TSpanWriter : ISpanWriter
            {
                checked
                {
                    Span<byte> scopedSpan = span.Slice(offset, 16);

                    if (value is null)
                    {
                        scopedSpan.Clear();
                        return;
                    }

                    WriteInlineValueOf_bc87f771a2d34655b1177386c982166c(spanWriter, scopedSpan, value.IntValue, 0);
                    WriteInlineValueOf_8f6322dbf18f4a30925cd058157607c7(spanWriter, scopedSpan, value.LongValue, 8);
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static int GetMaxSizeOf_bc87f771a2d34655b1177386c982166c(global::System.Int32 value)
            {
                checked
                {
                    return 7;
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static global::System.Int32 Read_bc87f771a2d34655b1177386c982166c<TInputBuffer>(
                TInputBuffer buffer,
                int offset
                ) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return buffer.ReadInt(offset);
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static void WriteInlineValueOf_bc87f771a2d34655b1177386c982166c<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                global::System.Int32 value,
                int offset

                ) where TSpanWriter : ISpanWriter
            {
                checked
                {
                    spanWriter.WriteInt(span, value, offset);
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static int GetMaxSizeOf_8f6322dbf18f4a30925cd058157607c7(global::System.Int64 value)
            {
                checked
                {
                    return 15;
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static global::System.Int64 Read_8f6322dbf18f4a30925cd058157607c7<TInputBuffer>(
                TInputBuffer buffer,
                int offset
                ) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return buffer.ReadLong(offset);
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static void WriteInlineValueOf_8f6322dbf18f4a30925cd058157607c7<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                global::System.Int64 value,
                int offset

                ) where TSpanWriter : ISpanWriter
            {
                checked
                {
                    spanWriter.WriteLong(span, value, offset);
                }
            }
        }

        #endregion
    }

}

namespace Samples.IncludesExample
{
    public static partial class Service
    {

        public static class Serializer<T> where T : class
        {
            private static ISerializer<T> __value;
            static Serializer()
            {
                checked
                {
                    __value = null!;
                    System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(Service).TypeHandle);
                }
            }

            public static ISerializer<T> Value
            {
                get => __value;
                set => __value = value ?? throw new ArgumentNullException(nameof(value));
            }
        }


        private static Grpc.Core.Marshaller<T> CreateMarshaller<T>() where T : class
        {
            checked
            {
                return Grpc.Core.Marshallers.Create<T>(
                    (item, sc) =>
                    {
                        Serializer<T>.Value.Write(sc.GetBufferWriter(), item);
                        sc.Complete();
                    },
                    dc => Serializer<T>.Value.Parse(new ArrayInputBuffer(dc.PayloadAsNewBuffer())));
            }
        }

        private static readonly Grpc.Core.Marshaller<Samples.IncludesExample.Request> __Marshaller_4266a86f5ce84152a9122c45333a6392 = CreateMarshaller<Samples.IncludesExample.Request>();
        private static readonly Grpc.Core.Method<Samples.IncludesExample.Request, Samples.IncludesExample.Request> __Method_80b982e509f1400b926f6d49ee8730c7 = new Grpc.Core.Method<Samples.IncludesExample.Request, Samples.IncludesExample.Request>(
            Grpc.Core.MethodType.Unary,
            "Samples.IncludesExample.Service",
            "SingleOperation",
            __Marshaller_4266a86f5ce84152a9122c45333a6392,
            __Marshaller_4266a86f5ce84152a9122c45333a6392);
        static partial void OnStaticInitialization();

        static Service()
        {
            checked
            {
                Serializer<Samples.IncludesExample.Request>.Value = Samples.IncludesExample.Request.Serializer;
                OnStaticInitialization();
            }
        }

        [Grpc.Core.BindServiceMethod(typeof(Service), "BindService")]
        public abstract partial class ServiceServerBase
        {
            public abstract System.Threading.Tasks.Task<Samples.IncludesExample.Request> SingleOperation(Samples.IncludesExample.Request request, Grpc.Core.ServerCallContext callContext);
        }

        public static Grpc.Core.ServerServiceDefinition BindService(ServiceServerBase serviceImpl)
        {
            checked
            {
                return Grpc.Core.ServerServiceDefinition.CreateBuilder()
                    .AddMethod(__Method_80b982e509f1400b926f6d49ee8730c7, serviceImpl.SingleOperation)
                    .Build();
            }
        }

        public static void BindService(Grpc.Core.ServiceBinderBase serviceBinder, ServiceServerBase serviceImpl)
        {
            checked
            {
                serviceBinder.AddMethod(__Method_80b982e509f1400b926f6d49ee8730c7,
                    serviceImpl == null
                        ? null
                        : new Grpc.Core.UnaryServerMethod<Samples.IncludesExample.Request, Samples.IncludesExample.Request>(serviceImpl.SingleOperation));
            }
        }

        public partial class ServiceClient : Grpc.Core.ClientBase<ServiceClient>
        {
            public ServiceClient(Grpc.Core.ChannelBase channel) : base(channel)
            {
                checked
                { }
            }

            public ServiceClient(Grpc.Core.CallInvoker callInvoker) : base(callInvoker)
            {
                checked
                { }
            }

            protected ServiceClient() : base()
            {
                checked
                { }
            }

            protected ServiceClient(ClientBaseConfiguration configuration) : base(configuration)
            {
                checked
                { }
            }

            protected override ServiceClient NewInstance(ClientBaseConfiguration configuration)
            {
                checked
                {
                    return new ServiceClient(configuration);
                }
            }

            public virtual Grpc.Core.AsyncUnaryCall<Samples.IncludesExample.Request> SingleOperation(Samples.IncludesExample.Request request, Grpc.Core.Metadata? headers = null, System.DateTime? deadline = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                checked
                {
                    return SingleOperation(request, new Grpc.Core.CallOptions(headers, deadline, cancellationToken));
                }
            }

            public virtual Grpc.Core.AsyncUnaryCall<Samples.IncludesExample.Request> SingleOperation(Samples.IncludesExample.Request request, Grpc.Core.CallOptions options)
            {
                checked
                {
                    return CallInvoker.AsyncUnaryCall(__Method_80b982e509f1400b926f6d49ee8730c7, null, options, request);
                }
            }
        }

    }

}

