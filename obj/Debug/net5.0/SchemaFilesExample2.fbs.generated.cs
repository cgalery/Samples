
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the FlatSharp FBS to C# compiler (source hash: 6.2.1.rFqJTu9t8FYzfs+06CuxDgIhkZzxUuVEnuE6YPTHiT8=)
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading;
using System.Threading.Tasks;
using FlatSharp;
using FlatSharp.Attributes;
using FlatSharp.Internal;
#pragma warning disable 0618
#nullable enable
namespace FlatSharp.Compiler.Generated
{
    internal static class CloneHelpers_7c6e8c12790d44499a7a3929bb6d060c
    {
        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static global::Samples.SchemaFilesExample2.Fruit Clone(global::Samples.SchemaFilesExample2.Fruit item)
        {
            checked
            {
                return item;
            }
        }

        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static global::System.SByte Clone(global::System.SByte item)
        {
            checked
            {
                return item;
            }
        }

        [return: System.Diagnostics.CodeAnalysis.NotNullIfNotNull("item")]
        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static global::Samples.SchemaFilesExample2.Bar? Clone(global::Samples.SchemaFilesExample2.Bar? item)
        {
            checked
            {
                return item is null ? null : new Samples.SchemaFilesExample2.Bar(item);
            }
        }

        [return: System.Diagnostics.CodeAnalysis.NotNullIfNotNull("item")]
        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static global::Samples.SchemaFilesExample2.Foo? Clone(global::Samples.SchemaFilesExample2.Foo? item)
        {
            checked
            {
                return item is null ? null : new Samples.SchemaFilesExample2.Foo(item);
            }
        }

        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static global::System.UInt64 Clone(global::System.UInt64 item)
        {
            checked
            {
                return item;
            }
        }

        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static global::System.Int16 Clone(global::System.Int16 item)
        {
            checked
            {
                return item;
            }
        }

        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static global::System.UInt32 Clone(global::System.UInt32 item)
        {
            checked
            {
                return item;
            }
        }

        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static global::System.Int32 Clone(global::System.Int32 item)
        {
            checked
            {
                return item;
            }
        }

        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static global::System.Single Clone(global::System.Single item)
        {
            checked
            {
                return item;
            }
        }

        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static global::System.UInt16 Clone(global::System.UInt16 item)
        {
            checked
            {
                return item;
            }
        }

        [return: System.Diagnostics.CodeAnalysis.NotNullIfNotNull("item")]
        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static global::Samples.SchemaFilesExample2.FooBar? Clone(global::Samples.SchemaFilesExample2.FooBar? item)
        {
            checked
            {
                return item is null ? null : new Samples.SchemaFilesExample2.FooBar(item);
            }
        }

        [return: System.Diagnostics.CodeAnalysis.NotNullIfNotNull("item")]
        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static global::System.String? Clone(global::System.String? item)
        {
            checked
            {
                return item;
            }
        }

        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static global::System.Double Clone(global::System.Double item)
        {
            checked
            {
                return item;
            }
        }

        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static global::System.Byte Clone(global::System.Byte item)
        {
            checked
            {
                return item;
            }
        }

        [return: System.Diagnostics.CodeAnalysis.NotNullIfNotNull("item")]
        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static global::Samples.SchemaFilesExample2.FooBarContainer? Clone(global::Samples.SchemaFilesExample2.FooBarContainer? item)
        {
            checked
            {
                return item is null ? null : new Samples.SchemaFilesExample2.FooBarContainer(item);
            }
        }

        [return: System.Diagnostics.CodeAnalysis.NotNullIfNotNull("item")]
        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static global::System.Collections.Generic.IList<Samples.SchemaFilesExample2.FooBar>? Clone(global::System.Collections.Generic.IList<Samples.SchemaFilesExample2.FooBar>? item)
        {
            checked
            {
                return VectorCloneHelpers.Clone<Samples.SchemaFilesExample2.FooBar>(item, FlatSharp.Compiler.Generated.CloneHelpers_7c6e8c12790d44499a7a3929bb6d060c.Clone);
            }
        }

        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static global::System.Boolean Clone(global::System.Boolean item)
        {
            checked
            {
                return item;
            }
        }

        [return: System.Diagnostics.CodeAnalysis.NotNullIfNotNull("item")]
        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static global::Samples.SchemaFilesExample2.OtherTable? Clone(global::Samples.SchemaFilesExample2.OtherTable? item)
        {
            checked
            {
                return item is null ? null : new Samples.SchemaFilesExample2.OtherTable(item);
            }
        }
    }

}

namespace Samples.SchemaFilesExample2
{
    [FlatBufferEnum(typeof(sbyte))]
    public enum Fruit : sbyte
    {
        Apples = 0,
        Pears = 1,
        Bananas = 2,
    }

}

namespace Samples.SchemaFilesExample2
{
    [FlatBufferStruct]
    [System.Runtime.CompilerServices.CompilerGenerated]
    public partial class Bar
    {
#pragma warning disable CS8618
        public Bar()
        {
            checked
            {
                this.parent = new Samples.SchemaFilesExample2.Foo();
                this.OnInitialized(null);
            }
        }

#pragma warning restore CS8618
#pragma warning disable CS8618
        protected Bar(FlatBufferDeserializationContext context)
        {
            checked
            {
            }
        }

#pragma warning restore CS8618
        public Bar(Bar source)
        {
            checked
            {
                this.parent = FlatSharp.Compiler.Generated.CloneHelpers_7c6e8c12790d44499a7a3929bb6d060c.Clone(source.parent);
                this.time = FlatSharp.Compiler.Generated.CloneHelpers_7c6e8c12790d44499a7a3929bb6d060c.Clone(source.time);
                this.ratio = FlatSharp.Compiler.Generated.CloneHelpers_7c6e8c12790d44499a7a3929bb6d060c.Clone(source.ratio);
                this.size = FlatSharp.Compiler.Generated.CloneHelpers_7c6e8c12790d44499a7a3929bb6d060c.Clone(source.size);
                this.OnInitialized(null);
            }
        }

        partial void OnInitialized(FlatBufferDeserializationContext? context);
        protected void OnFlatSharpDeserialized(FlatBufferDeserializationContext? context) => this.OnInitialized(context);


        [FlatBufferItemAttribute(0)]
        public virtual Samples.SchemaFilesExample2.Foo parent { get; set; }

        [FlatBufferItemAttribute(1)]
        public virtual int time { get; set; }

        [FlatBufferItemAttribute(2)]
        public virtual float ratio { get; set; }

        [FlatBufferItemAttribute(3)]
        public virtual ushort size { get; set; }
    }

}

namespace Samples.SchemaFilesExample2
{
    [FlatBufferStruct]
    [System.Runtime.CompilerServices.CompilerGenerated]
    public partial class Foo
    {
#pragma warning disable CS8618
        public Foo()
        {
            checked
            {
                this.OnInitialized(null);
            }
        }

#pragma warning restore CS8618
#pragma warning disable CS8618
        protected Foo(FlatBufferDeserializationContext context)
        {
            checked
            {
            }
        }

#pragma warning restore CS8618
        public Foo(Foo source)
        {
            checked
            {
                this.id = FlatSharp.Compiler.Generated.CloneHelpers_7c6e8c12790d44499a7a3929bb6d060c.Clone(source.id);
                this.count = FlatSharp.Compiler.Generated.CloneHelpers_7c6e8c12790d44499a7a3929bb6d060c.Clone(source.count);
                this.prefix = FlatSharp.Compiler.Generated.CloneHelpers_7c6e8c12790d44499a7a3929bb6d060c.Clone(source.prefix);
                this.length = FlatSharp.Compiler.Generated.CloneHelpers_7c6e8c12790d44499a7a3929bb6d060c.Clone(source.length);
                this.OnInitialized(null);
            }
        }

        partial void OnInitialized(FlatBufferDeserializationContext? context);
        protected void OnFlatSharpDeserialized(FlatBufferDeserializationContext? context) => this.OnInitialized(context);


        [FlatBufferItemAttribute(0)]
        public virtual ulong id { get; set; }

        [FlatBufferItemAttribute(1)]
        public virtual short count { get; set; }

        [FlatBufferItemAttribute(2)]
        public virtual sbyte prefix { get; set; }

        [FlatBufferItemAttribute(3)]
        public virtual uint length { get; set; }
    }

}

namespace Samples.SchemaFilesExample2
{
    [FlatBufferTable()]
    [System.Runtime.CompilerServices.CompilerGenerated]
    public partial class FooBar
        : object
        , IFlatBufferSerializable<Samples.SchemaFilesExample2.FooBar>
    {
#pragma warning disable CS8618
        public FooBar()
        {
            checked
            {
                this.sibling = default!;
                this.name = default!;
                this.rating = default!;
                this.postfix = default!;
                this.OnInitialized(null);
            }
        }

#pragma warning restore CS8618
#pragma warning disable CS8618
        protected FooBar(FlatBufferDeserializationContext context)
        {
            checked
            {
            }
        }

#pragma warning restore CS8618
        public FooBar(FooBar source)
        {
            checked
            {
                this.sibling = FlatSharp.Compiler.Generated.CloneHelpers_7c6e8c12790d44499a7a3929bb6d060c.Clone(source.sibling);
                this.name = FlatSharp.Compiler.Generated.CloneHelpers_7c6e8c12790d44499a7a3929bb6d060c.Clone(source.name);
                this.rating = FlatSharp.Compiler.Generated.CloneHelpers_7c6e8c12790d44499a7a3929bb6d060c.Clone(source.rating);
                this.postfix = FlatSharp.Compiler.Generated.CloneHelpers_7c6e8c12790d44499a7a3929bb6d060c.Clone(source.postfix);
                this.OnInitialized(null);
            }
        }

        partial void OnInitialized(FlatBufferDeserializationContext? context);
        protected void OnFlatSharpDeserialized(FlatBufferDeserializationContext? context) => this.OnInitialized(context);


        [FlatBufferItemAttribute(0)]
        public virtual Samples.SchemaFilesExample2.Bar? sibling { get; set; }

        [FlatBufferItemAttribute(1)]
        public virtual string? name { get; set; }

        [FlatBufferItemAttribute(2)]
        public virtual double rating { get; set; }

        [FlatBufferItemAttribute(3)]
        public virtual byte postfix { get; set; }
        public static ISerializer<Samples.SchemaFilesExample2.FooBar> Serializer { get; } = new GeneratedSerializer().AsISerializer();

        ISerializer IFlatBufferSerializable.Serializer => Serializer;
        ISerializer<Samples.SchemaFilesExample2.FooBar> IFlatBufferSerializable<Samples.SchemaFilesExample2.FooBar>.Serializer => Serializer;

        #region Serializer for Samples.SchemaFilesExample2.FooBar

        [FlatSharpGeneratedSerializerAttribute(FlatBufferDeserializationOption.GreedyMutable)]
        private sealed class GeneratedSerializer : IGeneratedSerializer<global::Samples.SchemaFilesExample2.FooBar>
        {
            // Method generated to help AOT compilers make good decisions about generics.
            public void __AotHelper()
            {
                checked
                {
                    this.Write<ISpanWriter>(default!, new byte[10], default!, default!, default!);
                    this.Write<SpanWriter>(default!, new byte[10], default!, default!, default!);

                    this.Parse<IInputBuffer>(default!, 0);
                    this.Parse<MemoryInputBuffer>(default!, 0);
                    this.Parse<ReadOnlyMemoryInputBuffer>(default!, 0);
                    this.Parse<ArrayInputBuffer>(default!, 0);
                    this.Parse<ArraySegmentInputBuffer>(default!, 0);

                    throw new InvalidOperationException("__AotHelper is not intended to be invoked");
                }
            }

            public GeneratedSerializer()
            {
                checked
                {
                    string? runtimeVersion = System.Reflection.CustomAttributeExtensions.GetCustomAttribute<System.Reflection.AssemblyFileVersionAttribute>(typeof(SpanWriter).Assembly)?.Version;
                    string compilerVersion = "6.2.1";

                    if (runtimeVersion != compilerVersion)
                    {
                        throw new InvalidOperationException($"FlatSharp runtime version didn't match compiler version. Ensure all FlatSharp NuGet packages use the same version. Runtime = '{runtimeVersion}', Compiler = '{compilerVersion}'.");
                    }

                    if (string.IsNullOrEmpty(runtimeVersion))
                    {
                        throw new InvalidOperationException($"Unable to find FlatSharp.Runtime version. Ensure all FlatSharp NuGet packages use the same version. Runtime = '{runtimeVersion}', Compiler = '{compilerVersion}'.");
                    }
                }
            }

            public FlatSharp.FlatBufferDeserializationOption DeserializationOption => FlatSharp.FlatBufferDeserializationOption.GreedyMutable;


            public void Write<TSpanWriter>(TSpanWriter writer, Span<byte> target, global::Samples.SchemaFilesExample2.FooBar root, int offset, SerializationContext context)
                where TSpanWriter : ISpanWriter
            {
                checked
                {
                    WriteInlineValueOf_d498a4bcc38e4dbc863982ec0315094c(writer, target, root, offset, context);
                }
            }

            public int GetMaxSize(global::Samples.SchemaFilesExample2.FooBar root)
            {
                checked
                {
                    return GetMaxSizeOf_d498a4bcc38e4dbc863982ec0315094c(root);
                }
            }

            public global::Samples.SchemaFilesExample2.FooBar Parse<TInputBuffer>(TInputBuffer buffer, int offset)
                where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return Read_d498a4bcc38e4dbc863982ec0315094c(buffer, offset);
                }
            }

            private static int GetMaxSizeOf_d498a4bcc38e4dbc863982ec0315094c(global::Samples.SchemaFilesExample2.FooBar value)
            {
                checked
                {

                    int runningSum = 63 + 13;
                    var index1Value = value.name;

                    if (!(index1Value is null))
                    {
                        runningSum += GetMaxSizeOf_179da61767f646df88c3f324cbecd660(index1Value);
                    }
                    return runningSum;

                }
            }

            private static global::Samples.SchemaFilesExample2.FooBar Read_d498a4bcc38e4dbc863982ec0315094c<TInputBuffer>(
                TInputBuffer buffer,
                int offset
                ) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return tableReader_8707f0bfbddc41fd8a4fa26a5316a045<TInputBuffer>.GetOrCreate(buffer, offset + buffer.ReadUOffset(offset));
                }
            }

            private sealed class tableReader_8707f0bfbddc41fd8a4fa26a5316a045<TInputBuffer>
                : global::Samples.SchemaFilesExample2.FooBar
                , global::FlatSharp.IFlatBufferDeserializedObject
                where TInputBuffer : IInputBuffer
            {
                private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                    = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.GreedyMutable);



                private Samples.SchemaFilesExample2.Bar? __index0Value;
                private System.String? __index1Value;
                private System.Double __index2Value;
                private System.Byte __index3Value;

                public static tableReader_8707f0bfbddc41fd8a4fa26a5316a045<TInputBuffer> GetOrCreate(TInputBuffer buffer, int offset)
                {
                    checked
                    {

                        var item = new tableReader_8707f0bfbddc41fd8a4fa26a5316a045<TInputBuffer>(buffer, offset);
                        return item;

                    }
                }

                private tableReader_8707f0bfbddc41fd8a4fa26a5316a045(TInputBuffer buffer, int offset) : base(__CtorContext)
                {
                    checked
                    {
                        VTable4.Create<TInputBuffer>(buffer, offset, out var vtable);
                        this.__index0Value = ReadIndex0Value(buffer, offset, vtable);
                        this.__index1Value = ReadIndex1Value(buffer, offset, vtable);
                        this.__index2Value = ReadIndex2Value(buffer, offset, vtable);
                        this.__index3Value = ReadIndex3Value(buffer, offset, vtable);
                        base.OnFlatSharpDeserialized(__CtorContext);
                    }
                }

                global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(Samples.SchemaFilesExample2.FooBar);
                global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
                global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => null;
                bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => false;


                public override Samples.SchemaFilesExample2.Bar? sibling
                {
                    get
                    {
                        checked
                        {
                            return this.__index0Value;
                        }
                    }

                    set
                    {
                        checked
                        {
                            this.__index0Value = value;
                        }
                    }
                }

                public override System.String? name
                {
                    get
                    {
                        checked
                        {
                            return this.__index1Value;
                        }
                    }

                    set
                    {
                        checked
                        {
                            this.__index1Value = value;
                        }
                    }
                }

                public override System.Double rating
                {
                    get
                    {
                        checked
                        {
                            return this.__index2Value;
                        }
                    }

                    set
                    {
                        checked
                        {
                            this.__index2Value = value;
                        }
                    }
                }

                public override System.Byte postfix
                {
                    get
                    {
                        checked
                        {
                            return this.__index3Value;
                        }
                    }

                    set
                    {
                        checked
                        {
                            this.__index3Value = value;
                        }
                    }
                }

                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static Samples.SchemaFilesExample2.Bar? ReadIndex0Value(
                    TInputBuffer buffer,
                    int offset,
                    VTable4 vtable)
                {
                    checked
                    {


                        int absoluteLocation;
                        {
                            int relativeOffset = vtable.OffsetOf(buffer, 0);
                            if (relativeOffset == 0)
                            {
                                return null;
                            }

                            absoluteLocation = offset + relativeOffset;
                        }

                        return Read_c18b8dbcfae44fe3a1f4e00f7a395d8a(buffer, absoluteLocation);
                    }
                }

                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static System.String? ReadIndex1Value(
                    TInputBuffer buffer,
                    int offset,
                    VTable4 vtable)
                {
                    checked
                    {


                        int absoluteLocation;
                        {
                            int relativeOffset = vtable.OffsetOf(buffer, 1);
                            if (relativeOffset == 0)
                            {
                                return null;
                            }

                            absoluteLocation = offset + relativeOffset;
                        }

                        return Read_179da61767f646df88c3f324cbecd660(buffer, absoluteLocation);
                    }
                }

                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static System.Double ReadIndex2Value(
                    TInputBuffer buffer,
                    int offset,
                    VTable4 vtable)
                {
                    checked
                    {


                        int absoluteLocation;
                        {
                            int relativeOffset = vtable.OffsetOf(buffer, 2);
                            if (relativeOffset == 0)
                            {
                                return default(System.Double);
                            }

                            absoluteLocation = offset + relativeOffset;
                        }

                        return Read_342f6c9aaf0049c5bf22d9435bbeaa27(buffer, absoluteLocation);
                    }
                }

                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static System.Byte ReadIndex3Value(
                    TInputBuffer buffer,
                    int offset,
                    VTable4 vtable)
                {
                    checked
                    {


                        int absoluteLocation;
                        {
                            int relativeOffset = vtable.OffsetOf(buffer, 3);
                            if (relativeOffset == 0)
                            {
                                return default(System.Byte);
                            }

                            absoluteLocation = offset + relativeOffset;
                        }

                        return Read_fa0c9b09b1a545659024438f9be0278f(buffer, absoluteLocation);
                    }
                }
            }



            private static void WriteInlineValueOf_d498a4bcc38e4dbc863982ec0315094c<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                global::Samples.SchemaFilesExample2.FooBar value,
                int offset
                , SerializationContext context
                ) where TSpanWriter : ISpanWriter
            {
                checked
                {

                    int tableStart = context.AllocateSpace(60, sizeof(int));
                    spanWriter.WriteUOffset(span, offset, tableStart);
                    int currentOffset = tableStart + sizeof(int); // skip past vtable soffset_t.

                    int vtableLength = 4;
                    Span<byte> vtable = stackalloc byte[12];

                    var index0Value = value.sibling;
                    var index1Value = value.name;
                    var index2Value = value.rating;
                    var index3Value = value.postfix;

                    var index2Offset = tableStart;
                    if (index2Value != default(System.Double))
                    {

                        currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 8);
                        index2Offset = currentOffset;
                        currentOffset += 8;


                        WriteInlineValueOf_342f6c9aaf0049c5bf22d9435bbeaa27(spanWriter, span, index2Value, index2Offset);


                        if (10 > vtableLength)
                        {
                            vtableLength = 10;
                        }
                    }

                    spanWriter.WriteUShort(vtable, (ushort)(index2Offset - tableStart), 8);

                    var index0Offset = tableStart;
                    if (!(index0Value is null))
                    {

                        currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 8);
                        index0Offset = currentOffset;
                        currentOffset += 26;


                        WriteInlineValueOf_c18b8dbcfae44fe3a1f4e00f7a395d8a(spanWriter, span, index0Value!, index0Offset);


                        if (6 > vtableLength)
                        {
                            vtableLength = 6;
                        }
                    }

                    spanWriter.WriteUShort(vtable, (ushort)(index0Offset - tableStart), 4);

                    var index1Offset = tableStart;
                    if (!(index1Value is null))
                    {

                        currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 4);
                        index1Offset = currentOffset;
                        currentOffset += 4;


                        if (8 > vtableLength)
                        {
                            vtableLength = 8;
                        }
                    }

                    spanWriter.WriteUShort(vtable, (ushort)(index1Offset - tableStart), 6);

                    var index3Offset = tableStart;
                    if (index3Value != default(System.Byte))
                    {

                        currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 1);
                        index3Offset = currentOffset;
                        currentOffset += 1;


                        WriteInlineValueOf_fa0c9b09b1a545659024438f9be0278f(spanWriter, span, index3Value, index3Offset);

                        vtableLength = 12;
                    }

                    spanWriter.WriteUShort(vtable, (ushort)(index3Offset - tableStart), 10);
                    int tableLength = currentOffset - tableStart;
                    context.Offset -= 60 - tableLength;
                    spanWriter.WriteUShort(vtable, (ushort)vtableLength, 0);
                    spanWriter.WriteUShort(vtable, (ushort)tableLength, sizeof(ushort));
                    int vtablePosition = context.FinishVTable(span, vtable.Slice(0, vtableLength));
                    spanWriter.WriteInt(span, tableStart - vtablePosition, tableStart);

                    if (index1Offset != tableStart)
                    {


                        WriteInlineValueOf_179da61767f646df88c3f324cbecd660(spanWriter, span, index1Value!, index1Offset, context, tableMetadata_2a07f2013fa84e9d967b9bebcdae9683.name);

                    }

                }
            }

            private static class tableMetadata_2a07f2013fa84e9d967b9bebcdae9683
            {

                public static readonly TableFieldContext sibling = new TableFieldContext(
                    "Samples.SchemaFilesExample2.FooBar.sibling",
                    false,
                    false);

                public static readonly TableFieldContext name = new TableFieldContext(
                    "Samples.SchemaFilesExample2.FooBar.name",
                    false,
                    false);

                public static readonly TableFieldContext rating = new TableFieldContext(
                    "Samples.SchemaFilesExample2.FooBar.rating",
                    false,
                    false);

                public static readonly TableFieldContext postfix = new TableFieldContext(
                    "Samples.SchemaFilesExample2.FooBar.postfix",
                    false,
                    false);
            }


            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static int GetMaxSizeOf_c18b8dbcfae44fe3a1f4e00f7a395d8a(global::Samples.SchemaFilesExample2.Bar value)
            {
                checked
                {
                    return 33;
                }
            }

            private static global::Samples.SchemaFilesExample2.Bar Read_c18b8dbcfae44fe3a1f4e00f7a395d8a<TInputBuffer>(
                TInputBuffer buffer,
                int offset
                ) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return structReader_2fdeb6b89ea54df6aa1d4f20bdad353e<TInputBuffer>.GetOrCreate(buffer, offset);
                }
            }

            private sealed class structReader_2fdeb6b89ea54df6aa1d4f20bdad353e<TInputBuffer>
                : global::Samples.SchemaFilesExample2.Bar
                , global::FlatSharp.IFlatBufferDeserializedObject
                where TInputBuffer : IInputBuffer
            {
                private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                    = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.GreedyMutable);



                private Samples.SchemaFilesExample2.Foo __index0Value;
                private System.Int32 __index1Value;
                private System.Single __index2Value;
                private System.UInt16 __index3Value;

                public static structReader_2fdeb6b89ea54df6aa1d4f20bdad353e<TInputBuffer> GetOrCreate(TInputBuffer buffer, int offset)
                {
                    checked
                    {

                        var item = new structReader_2fdeb6b89ea54df6aa1d4f20bdad353e<TInputBuffer>(buffer, offset);
                        return item;

                    }
                }

                private structReader_2fdeb6b89ea54df6aa1d4f20bdad353e(TInputBuffer buffer, int offset) : base(__CtorContext)
                {
                    checked
                    {
                        this.__index0Value = ReadIndex0Value(buffer, offset, default);
                        this.__index1Value = ReadIndex1Value(buffer, offset, default);
                        this.__index2Value = ReadIndex2Value(buffer, offset, default);
                        this.__index3Value = ReadIndex3Value(buffer, offset, default);
                        base.OnFlatSharpDeserialized(__CtorContext);
                    }
                }

                global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(Samples.SchemaFilesExample2.Bar);
                global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
                global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => null;
                bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => false;


                public override Samples.SchemaFilesExample2.Foo parent
                {
                    get
                    {
                        checked
                        {
                            return this.__index0Value;
                        }
                    }

                    set
                    {
                        checked
                        {
                            this.__index0Value = value;
                        }
                    }
                }

                public override System.Int32 time
                {
                    get
                    {
                        checked
                        {
                            return this.__index1Value;
                        }
                    }

                    set
                    {
                        checked
                        {
                            this.__index1Value = value;
                        }
                    }
                }

                public override System.Single ratio
                {
                    get
                    {
                        checked
                        {
                            return this.__index2Value;
                        }
                    }

                    set
                    {
                        checked
                        {
                            this.__index2Value = value;
                        }
                    }
                }

                public override System.UInt16 size
                {
                    get
                    {
                        checked
                        {
                            return this.__index3Value;
                        }
                    }

                    set
                    {
                        checked
                        {
                            this.__index3Value = value;
                        }
                    }
                }

                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static Samples.SchemaFilesExample2.Foo ReadIndex0Value(
                    TInputBuffer buffer,
                    int offset,
                    VTable4 vtable)
                {
                    checked
                    {
                        return Read_d69fff537c1c4fcfa772480067f1ea8e(buffer, offset + 0);
                    }
                }

                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static System.Int32 ReadIndex1Value(
                    TInputBuffer buffer,
                    int offset,
                    VTable4 vtable)
                {
                    checked
                    {
                        return Read_bcbe6e27b0ad4efbb3a9899f76e97057(buffer, offset + 16);
                    }
                }

                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static System.Single ReadIndex2Value(
                    TInputBuffer buffer,
                    int offset,
                    VTable4 vtable)
                {
                    checked
                    {
                        return Read_f65623d2da524e4caa575f2cc857557b(buffer, offset + 20);
                    }
                }

                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static System.UInt16 ReadIndex3Value(
                    TInputBuffer buffer,
                    int offset,
                    VTable4 vtable)
                {
                    checked
                    {
                        return Read_91be09ed8f5f4cfaa45c216fb83ddb1c(buffer, offset + 24);
                    }
                }
            }



            private static void WriteInlineValueOf_c18b8dbcfae44fe3a1f4e00f7a395d8a<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                global::Samples.SchemaFilesExample2.Bar value,
                int offset

                ) where TSpanWriter : ISpanWriter
            {
                checked
                {
                    Span<byte> scopedSpan = span.Slice(offset, 26);

                    if (value is null)
                    {
                        scopedSpan.Clear();
                        return;
                    }

                    WriteInlineValueOf_d69fff537c1c4fcfa772480067f1ea8e(spanWriter, scopedSpan, value.parent, 0);
                    WriteInlineValueOf_bcbe6e27b0ad4efbb3a9899f76e97057(spanWriter, scopedSpan, value.time, 16);
                    WriteInlineValueOf_f65623d2da524e4caa575f2cc857557b(spanWriter, scopedSpan, value.ratio, 20);
                    WriteInlineValueOf_91be09ed8f5f4cfaa45c216fb83ddb1c(spanWriter, scopedSpan, value.size, 24);
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static int GetMaxSizeOf_d69fff537c1c4fcfa772480067f1ea8e(global::Samples.SchemaFilesExample2.Foo value)
            {
                checked
                {
                    return 23;
                }
            }

            private static global::Samples.SchemaFilesExample2.Foo Read_d69fff537c1c4fcfa772480067f1ea8e<TInputBuffer>(
                TInputBuffer buffer,
                int offset
                ) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return structReader_b6c9c841db6f4bdc8f20913b28bd5510<TInputBuffer>.GetOrCreate(buffer, offset);
                }
            }

            private sealed class structReader_b6c9c841db6f4bdc8f20913b28bd5510<TInputBuffer>
                : global::Samples.SchemaFilesExample2.Foo
                , global::FlatSharp.IFlatBufferDeserializedObject
                where TInputBuffer : IInputBuffer
            {
                private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                    = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.GreedyMutable);



                private System.UInt64 __index0Value;
                private System.Int16 __index1Value;
                private System.SByte __index2Value;
                private System.UInt32 __index3Value;

                public static structReader_b6c9c841db6f4bdc8f20913b28bd5510<TInputBuffer> GetOrCreate(TInputBuffer buffer, int offset)
                {
                    checked
                    {

                        var item = new structReader_b6c9c841db6f4bdc8f20913b28bd5510<TInputBuffer>(buffer, offset);
                        return item;

                    }
                }

                private structReader_b6c9c841db6f4bdc8f20913b28bd5510(TInputBuffer buffer, int offset) : base(__CtorContext)
                {
                    checked
                    {
                        this.__index0Value = ReadIndex0Value(buffer, offset, default);
                        this.__index1Value = ReadIndex1Value(buffer, offset, default);
                        this.__index2Value = ReadIndex2Value(buffer, offset, default);
                        this.__index3Value = ReadIndex3Value(buffer, offset, default);
                        base.OnFlatSharpDeserialized(__CtorContext);
                    }
                }

                global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(Samples.SchemaFilesExample2.Foo);
                global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
                global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => null;
                bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => false;


                public override System.UInt64 id
                {
                    get
                    {
                        checked
                        {
                            return this.__index0Value;
                        }
                    }

                    set
                    {
                        checked
                        {
                            this.__index0Value = value;
                        }
                    }
                }

                public override System.Int16 count
                {
                    get
                    {
                        checked
                        {
                            return this.__index1Value;
                        }
                    }

                    set
                    {
                        checked
                        {
                            this.__index1Value = value;
                        }
                    }
                }

                public override System.SByte prefix
                {
                    get
                    {
                        checked
                        {
                            return this.__index2Value;
                        }
                    }

                    set
                    {
                        checked
                        {
                            this.__index2Value = value;
                        }
                    }
                }

                public override System.UInt32 length
                {
                    get
                    {
                        checked
                        {
                            return this.__index3Value;
                        }
                    }

                    set
                    {
                        checked
                        {
                            this.__index3Value = value;
                        }
                    }
                }

                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static System.UInt64 ReadIndex0Value(
                    TInputBuffer buffer,
                    int offset,
                    VTable4 vtable)
                {
                    checked
                    {
                        return Read_fd66fb501a2c4c798bff85b47c7b365b(buffer, offset + 0);
                    }
                }

                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static System.Int16 ReadIndex1Value(
                    TInputBuffer buffer,
                    int offset,
                    VTable4 vtable)
                {
                    checked
                    {
                        return Read_019089eb01f74d3b81ef44eedd6113d0(buffer, offset + 8);
                    }
                }

                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static System.SByte ReadIndex2Value(
                    TInputBuffer buffer,
                    int offset,
                    VTable4 vtable)
                {
                    checked
                    {
                        return Read_cdf0490c8fd34ee7b35b98959a8d0975(buffer, offset + 10);
                    }
                }

                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static System.UInt32 ReadIndex3Value(
                    TInputBuffer buffer,
                    int offset,
                    VTable4 vtable)
                {
                    checked
                    {
                        return Read_0e472b853708440289ff717fea9391ea(buffer, offset + 12);
                    }
                }
            }



            private static void WriteInlineValueOf_d69fff537c1c4fcfa772480067f1ea8e<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                global::Samples.SchemaFilesExample2.Foo value,
                int offset

                ) where TSpanWriter : ISpanWriter
            {
                checked
                {
                    Span<byte> scopedSpan = span.Slice(offset, 16);

                    if (value is null)
                    {
                        scopedSpan.Clear();
                        return;
                    }

                    WriteInlineValueOf_fd66fb501a2c4c798bff85b47c7b365b(spanWriter, scopedSpan, value.id, 0);
                    WriteInlineValueOf_019089eb01f74d3b81ef44eedd6113d0(spanWriter, scopedSpan, value.count, 8);
                    WriteInlineValueOf_cdf0490c8fd34ee7b35b98959a8d0975(spanWriter, scopedSpan, value.prefix, 10);
                    WriteInlineValueOf_0e472b853708440289ff717fea9391ea(spanWriter, scopedSpan, value.length, 12);
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static int GetMaxSizeOf_fd66fb501a2c4c798bff85b47c7b365b(global::System.UInt64 value)
            {
                checked
                {
                    return 15;
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static global::System.UInt64 Read_fd66fb501a2c4c798bff85b47c7b365b<TInputBuffer>(
                TInputBuffer buffer,
                int offset
                ) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return buffer.ReadULong(offset);
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static void WriteInlineValueOf_fd66fb501a2c4c798bff85b47c7b365b<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                global::System.UInt64 value,
                int offset

                ) where TSpanWriter : ISpanWriter
            {
                checked
                {
                    spanWriter.WriteULong(span, value, offset);
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static int GetMaxSizeOf_019089eb01f74d3b81ef44eedd6113d0(global::System.Int16 value)
            {
                checked
                {
                    return 3;
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static global::System.Int16 Read_019089eb01f74d3b81ef44eedd6113d0<TInputBuffer>(
                TInputBuffer buffer,
                int offset
                ) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return buffer.ReadShort(offset);
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static void WriteInlineValueOf_019089eb01f74d3b81ef44eedd6113d0<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                global::System.Int16 value,
                int offset

                ) where TSpanWriter : ISpanWriter
            {
                checked
                {
                    spanWriter.WriteShort(span, value, offset);
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static int GetMaxSizeOf_cdf0490c8fd34ee7b35b98959a8d0975(global::System.SByte value)
            {
                checked
                {
                    return 1;
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static global::System.SByte Read_cdf0490c8fd34ee7b35b98959a8d0975<TInputBuffer>(
                TInputBuffer buffer,
                int offset
                ) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return buffer.ReadSByte(offset);
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static void WriteInlineValueOf_cdf0490c8fd34ee7b35b98959a8d0975<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                global::System.SByte value,
                int offset

                ) where TSpanWriter : ISpanWriter
            {
                checked
                {
                    spanWriter.WriteSByte(span, value, offset);
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static int GetMaxSizeOf_0e472b853708440289ff717fea9391ea(global::System.UInt32 value)
            {
                checked
                {
                    return 7;
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static global::System.UInt32 Read_0e472b853708440289ff717fea9391ea<TInputBuffer>(
                TInputBuffer buffer,
                int offset
                ) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return buffer.ReadUInt(offset);
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static void WriteInlineValueOf_0e472b853708440289ff717fea9391ea<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                global::System.UInt32 value,
                int offset

                ) where TSpanWriter : ISpanWriter
            {
                checked
                {
                    spanWriter.WriteUInt(span, value, offset);
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static int GetMaxSizeOf_bcbe6e27b0ad4efbb3a9899f76e97057(global::System.Int32 value)
            {
                checked
                {
                    return 7;
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static global::System.Int32 Read_bcbe6e27b0ad4efbb3a9899f76e97057<TInputBuffer>(
                TInputBuffer buffer,
                int offset
                ) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return buffer.ReadInt(offset);
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static void WriteInlineValueOf_bcbe6e27b0ad4efbb3a9899f76e97057<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                global::System.Int32 value,
                int offset

                ) where TSpanWriter : ISpanWriter
            {
                checked
                {
                    spanWriter.WriteInt(span, value, offset);
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static int GetMaxSizeOf_f65623d2da524e4caa575f2cc857557b(global::System.Single value)
            {
                checked
                {
                    return 7;
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static global::System.Single Read_f65623d2da524e4caa575f2cc857557b<TInputBuffer>(
                TInputBuffer buffer,
                int offset
                ) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return buffer.ReadFloat(offset);
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static void WriteInlineValueOf_f65623d2da524e4caa575f2cc857557b<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                global::System.Single value,
                int offset

                ) where TSpanWriter : ISpanWriter
            {
                checked
                {
                    spanWriter.WriteFloat(span, value, offset);
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static int GetMaxSizeOf_91be09ed8f5f4cfaa45c216fb83ddb1c(global::System.UInt16 value)
            {
                checked
                {
                    return 3;
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static global::System.UInt16 Read_91be09ed8f5f4cfaa45c216fb83ddb1c<TInputBuffer>(
                TInputBuffer buffer,
                int offset
                ) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return buffer.ReadUShort(offset);
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static void WriteInlineValueOf_91be09ed8f5f4cfaa45c216fb83ddb1c<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                global::System.UInt16 value,
                int offset

                ) where TSpanWriter : ISpanWriter
            {
                checked
                {
                    spanWriter.WriteUShort(span, value, offset);
                }
            }

            private static int GetMaxSizeOf_179da61767f646df88c3f324cbecd660(global::System.String value)
            {
                checked
                {
                    return SerializationHelpers.GetMaxSize(value);
                }
            }

            private static global::System.String Read_179da61767f646df88c3f324cbecd660<TInputBuffer>(
                TInputBuffer buffer,
                int offset
                ) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return buffer.ReadString(offset);
                }
            }

            private static void WriteInlineValueOf_179da61767f646df88c3f324cbecd660<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                global::System.String value,
                int offset
                , SerializationContext context
                , TableFieldContext fieldContext) where TSpanWriter : ISpanWriter
            {
                checked
                {

                    spanWriter.WriteString(
                        span,
                        value,
                        offset,
                        context);

                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static int GetMaxSizeOf_342f6c9aaf0049c5bf22d9435bbeaa27(global::System.Double value)
            {
                checked
                {
                    return 15;
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static global::System.Double Read_342f6c9aaf0049c5bf22d9435bbeaa27<TInputBuffer>(
                TInputBuffer buffer,
                int offset
                ) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return buffer.ReadDouble(offset);
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static void WriteInlineValueOf_342f6c9aaf0049c5bf22d9435bbeaa27<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                global::System.Double value,
                int offset

                ) where TSpanWriter : ISpanWriter
            {
                checked
                {
                    spanWriter.WriteDouble(span, value, offset);
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static int GetMaxSizeOf_fa0c9b09b1a545659024438f9be0278f(global::System.Byte value)
            {
                checked
                {
                    return 1;
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static global::System.Byte Read_fa0c9b09b1a545659024438f9be0278f<TInputBuffer>(
                TInputBuffer buffer,
                int offset
                ) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return buffer.ReadByte(offset);
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static void WriteInlineValueOf_fa0c9b09b1a545659024438f9be0278f<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                global::System.Byte value,
                int offset

                ) where TSpanWriter : ISpanWriter
            {
                checked
                {
                    spanWriter.WriteByte(span, value, offset);
                }
            }
        }

        #endregion
    }

}

namespace Samples.SchemaFilesExample2
{
    /// <summary>
    ///  This comment is injected into C# because of the '///'
    /// </summary>
    [FlatBufferTable()]
    [System.Runtime.CompilerServices.CompilerGenerated]
    public partial class FooBarContainer
        : object
        , IFlatBufferSerializable<Samples.SchemaFilesExample2.FooBarContainer>
    {
#pragma warning disable CS8618
        public FooBarContainer()
        {
            checked
            {
                this.list = default!;
                this.initialized = default!;
                this.fruit = default!;
                this.location = default!;
                this.OnInitialized(null);
            }
        }

#pragma warning restore CS8618
#pragma warning disable CS8618
        protected FooBarContainer(FlatBufferDeserializationContext context)
        {
            checked
            {
            }
        }

#pragma warning restore CS8618
        public FooBarContainer(FooBarContainer source)
        {
            checked
            {
                this.list = FlatSharp.Compiler.Generated.CloneHelpers_7c6e8c12790d44499a7a3929bb6d060c.Clone(source.list);
                this.initialized = FlatSharp.Compiler.Generated.CloneHelpers_7c6e8c12790d44499a7a3929bb6d060c.Clone(source.initialized);
                this.fruit = FlatSharp.Compiler.Generated.CloneHelpers_7c6e8c12790d44499a7a3929bb6d060c.Clone(source.fruit);
                this.location = FlatSharp.Compiler.Generated.CloneHelpers_7c6e8c12790d44499a7a3929bb6d060c.Clone(source.location);
                this.OnInitialized(null);
            }
        }

        partial void OnInitialized(FlatBufferDeserializationContext? context);
        protected void OnFlatSharpDeserialized(FlatBufferDeserializationContext? context) => this.OnInitialized(context);


        [FlatBufferItemAttribute(0)]
        public virtual IList<Samples.SchemaFilesExample2.FooBar>? list { get; set; }

        [FlatBufferItemAttribute(1)]
        public virtual bool initialized { get; set; }

        [FlatBufferItemAttribute(2)]
        public virtual Samples.SchemaFilesExample2.Fruit fruit { get; set; }

        [FlatBufferItemAttribute(3)]
        public virtual string? location { get; set; }
        public static ISerializer<Samples.SchemaFilesExample2.FooBarContainer> Serializer { get; } = new GeneratedSerializer().AsISerializer();

        ISerializer IFlatBufferSerializable.Serializer => Serializer;
        ISerializer<Samples.SchemaFilesExample2.FooBarContainer> IFlatBufferSerializable<Samples.SchemaFilesExample2.FooBarContainer>.Serializer => Serializer;

        #region Serializer for Samples.SchemaFilesExample2.FooBarContainer

        [FlatSharpGeneratedSerializerAttribute(FlatBufferDeserializationOption.GreedyMutable)]
        private sealed class GeneratedSerializer : IGeneratedSerializer<global::Samples.SchemaFilesExample2.FooBarContainer>
        {
            // Method generated to help AOT compilers make good decisions about generics.
            public void __AotHelper()
            {
                checked
                {
                    this.Write<ISpanWriter>(default!, new byte[10], default!, default!, default!);
                    this.Write<SpanWriter>(default!, new byte[10], default!, default!, default!);

                    this.Parse<IInputBuffer>(default!, 0);
                    this.Parse<MemoryInputBuffer>(default!, 0);
                    this.Parse<ReadOnlyMemoryInputBuffer>(default!, 0);
                    this.Parse<ArrayInputBuffer>(default!, 0);
                    this.Parse<ArraySegmentInputBuffer>(default!, 0);

                    throw new InvalidOperationException("__AotHelper is not intended to be invoked");
                }
            }

            public GeneratedSerializer()
            {
                checked
                {
                    string? runtimeVersion = System.Reflection.CustomAttributeExtensions.GetCustomAttribute<System.Reflection.AssemblyFileVersionAttribute>(typeof(SpanWriter).Assembly)?.Version;
                    string compilerVersion = "6.2.1";

                    if (runtimeVersion != compilerVersion)
                    {
                        throw new InvalidOperationException($"FlatSharp runtime version didn't match compiler version. Ensure all FlatSharp NuGet packages use the same version. Runtime = '{runtimeVersion}', Compiler = '{compilerVersion}'.");
                    }

                    if (string.IsNullOrEmpty(runtimeVersion))
                    {
                        throw new InvalidOperationException($"Unable to find FlatSharp.Runtime version. Ensure all FlatSharp NuGet packages use the same version. Runtime = '{runtimeVersion}', Compiler = '{compilerVersion}'.");
                    }
                }
            }

            public FlatSharp.FlatBufferDeserializationOption DeserializationOption => FlatSharp.FlatBufferDeserializationOption.GreedyMutable;


            public void Write<TSpanWriter>(TSpanWriter writer, Span<byte> target, global::Samples.SchemaFilesExample2.FooBarContainer root, int offset, SerializationContext context)
                where TSpanWriter : ISpanWriter
            {
                checked
                {
                    WriteInlineValueOf_5cf5e8419f1343849a9a63b03e6d79e2(writer, target, root, offset, context);
                }
            }

            public int GetMaxSize(global::Samples.SchemaFilesExample2.FooBarContainer root)
            {
                checked
                {
                    return GetMaxSizeOf_5cf5e8419f1343849a9a63b03e6d79e2(root);
                }
            }

            public global::Samples.SchemaFilesExample2.FooBarContainer Parse<TInputBuffer>(TInputBuffer buffer, int offset)
                where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return Read_5cf5e8419f1343849a9a63b03e6d79e2(buffer, offset);
                }
            }

            private static int GetMaxSizeOf_5cf5e8419f1343849a9a63b03e6d79e2(global::Samples.SchemaFilesExample2.FooBarContainer value)
            {
                checked
                {

                    int runningSum = 23 + 13;
                    var index0Value = value.list;

                    if (!(index0Value is null))
                    {
                        runningSum += GetMaxSizeOf_e068784a7f834c47b16f6a28392da573(index0Value);
                    }
                    var index3Value = value.location;

                    if (!(index3Value is null))
                    {
                        runningSum += GetMaxSizeOf_d1995991f334431ca98faea14004c554(index3Value);
                    }
                    return runningSum;

                }
            }

            private static global::Samples.SchemaFilesExample2.FooBarContainer Read_5cf5e8419f1343849a9a63b03e6d79e2<TInputBuffer>(
                TInputBuffer buffer,
                int offset
                ) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return tableReader_4bc9e254b4ee49fa920702c387b36b4d<TInputBuffer>.GetOrCreate(buffer, offset + buffer.ReadUOffset(offset));
                }
            }

            private sealed class tableReader_4bc9e254b4ee49fa920702c387b36b4d<TInputBuffer>
                : global::Samples.SchemaFilesExample2.FooBarContainer
                , global::FlatSharp.IFlatBufferDeserializedObject
                where TInputBuffer : IInputBuffer
            {
                private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                    = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.GreedyMutable);



                private System.Collections.Generic.IList<Samples.SchemaFilesExample2.FooBar>? __index0Value;
                private System.Boolean __index1Value;
                private Samples.SchemaFilesExample2.Fruit __index2Value;
                private System.String? __index3Value;

                public static tableReader_4bc9e254b4ee49fa920702c387b36b4d<TInputBuffer> GetOrCreate(TInputBuffer buffer, int offset)
                {
                    checked
                    {

                        var item = new tableReader_4bc9e254b4ee49fa920702c387b36b4d<TInputBuffer>(buffer, offset);
                        return item;

                    }
                }

                private tableReader_4bc9e254b4ee49fa920702c387b36b4d(TInputBuffer buffer, int offset) : base(__CtorContext)
                {
                    checked
                    {
                        VTable4.Create<TInputBuffer>(buffer, offset, out var vtable);
                        this.__index0Value = ReadIndex0Value(buffer, offset, vtable);
                        this.__index1Value = ReadIndex1Value(buffer, offset, vtable);
                        this.__index2Value = ReadIndex2Value(buffer, offset, vtable);
                        this.__index3Value = ReadIndex3Value(buffer, offset, vtable);
                        base.OnFlatSharpDeserialized(__CtorContext);
                    }
                }

                global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(Samples.SchemaFilesExample2.FooBarContainer);
                global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
                global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => null;
                bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => false;


                public override System.Collections.Generic.IList<Samples.SchemaFilesExample2.FooBar>? list
                {
                    get
                    {
                        checked
                        {
                            return this.__index0Value;
                        }
                    }

                    set
                    {
                        checked
                        {
                            this.__index0Value = value;
                        }
                    }
                }

                public override System.Boolean initialized
                {
                    get
                    {
                        checked
                        {
                            return this.__index1Value;
                        }
                    }

                    set
                    {
                        checked
                        {
                            this.__index1Value = value;
                        }
                    }
                }

                public override Samples.SchemaFilesExample2.Fruit fruit
                {
                    get
                    {
                        checked
                        {
                            return this.__index2Value;
                        }
                    }

                    set
                    {
                        checked
                        {
                            this.__index2Value = value;
                        }
                    }
                }

                public override System.String? location
                {
                    get
                    {
                        checked
                        {
                            return this.__index3Value;
                        }
                    }

                    set
                    {
                        checked
                        {
                            this.__index3Value = value;
                        }
                    }
                }

                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static System.Collections.Generic.IList<Samples.SchemaFilesExample2.FooBar>? ReadIndex0Value(
                    TInputBuffer buffer,
                    int offset,
                    VTable4 vtable)
                {
                    checked
                    {


                        int absoluteLocation;
                        {
                            int relativeOffset = vtable.OffsetOf(buffer, 0);
                            if (relativeOffset == 0)
                            {
                                return null;
                            }

                            absoluteLocation = offset + relativeOffset;
                        }

                        return Read_e068784a7f834c47b16f6a28392da573(buffer, absoluteLocation, tableMetadata_d0741c5621cf4accaea076b6ce8d2046.list);
                    }
                }

                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static System.Boolean ReadIndex1Value(
                    TInputBuffer buffer,
                    int offset,
                    VTable4 vtable)
                {
                    checked
                    {


                        int absoluteLocation;
                        {
                            int relativeOffset = vtable.OffsetOf(buffer, 1);
                            if (relativeOffset == 0)
                            {
                                return default(System.Boolean);
                            }

                            absoluteLocation = offset + relativeOffset;
                        }

                        return Read_ecfa8ebe7c024a2e89e5cf5b97917be1(buffer, absoluteLocation);
                    }
                }

                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static Samples.SchemaFilesExample2.Fruit ReadIndex2Value(
                    TInputBuffer buffer,
                    int offset,
                    VTable4 vtable)
                {
                    checked
                    {


                        int absoluteLocation;
                        {
                            int relativeOffset = vtable.OffsetOf(buffer, 2);
                            if (relativeOffset == 0)
                            {
                                return default(Samples.SchemaFilesExample2.Fruit);
                            }

                            absoluteLocation = offset + relativeOffset;
                        }

                        return Read_23f83094f7d647daadf68cfc85f1ff54(buffer, absoluteLocation);
                    }
                }

                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static System.String? ReadIndex3Value(
                    TInputBuffer buffer,
                    int offset,
                    VTable4 vtable)
                {
                    checked
                    {


                        int absoluteLocation;
                        {
                            int relativeOffset = vtable.OffsetOf(buffer, 3);
                            if (relativeOffset == 0)
                            {
                                return null;
                            }

                            absoluteLocation = offset + relativeOffset;
                        }

                        return Read_d1995991f334431ca98faea14004c554(buffer, absoluteLocation);
                    }
                }
            }



            private static void WriteInlineValueOf_5cf5e8419f1343849a9a63b03e6d79e2<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                global::Samples.SchemaFilesExample2.FooBarContainer value,
                int offset
                , SerializationContext context
                ) where TSpanWriter : ISpanWriter
            {
                checked
                {

                    int tableStart = context.AllocateSpace(20, sizeof(int));
                    spanWriter.WriteUOffset(span, offset, tableStart);
                    int currentOffset = tableStart + sizeof(int); // skip past vtable soffset_t.

                    int vtableLength = 4;
                    Span<byte> vtable = stackalloc byte[12];

                    var index0Value = value.list;
                    var index1Value = value.initialized;
                    var index2Value = value.fruit;
                    var index3Value = value.location;

                    var index3Offset = tableStart;
                    if (!(index3Value is null))
                    {

                        currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 4);
                        index3Offset = currentOffset;
                        currentOffset += 4;

                        vtableLength = 12;
                    }

                    spanWriter.WriteUShort(vtable, (ushort)(index3Offset - tableStart), 10);

                    var index0Offset = tableStart;
                    if (!(index0Value is null))
                    {

                        currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 4);
                        index0Offset = currentOffset;
                        currentOffset += 4;


                        if (6 > vtableLength)
                        {
                            vtableLength = 6;
                        }
                    }

                    spanWriter.WriteUShort(vtable, (ushort)(index0Offset - tableStart), 4);

                    var index2Offset = tableStart;
                    if (index2Value != default(Samples.SchemaFilesExample2.Fruit))
                    {

                        currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 1);
                        index2Offset = currentOffset;
                        currentOffset += 1;


                        WriteInlineValueOf_23f83094f7d647daadf68cfc85f1ff54(spanWriter, span, index2Value, index2Offset);


                        if (10 > vtableLength)
                        {
                            vtableLength = 10;
                        }
                    }

                    spanWriter.WriteUShort(vtable, (ushort)(index2Offset - tableStart), 8);

                    var index1Offset = tableStart;
                    if (index1Value != default(System.Boolean))
                    {

                        currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 1);
                        index1Offset = currentOffset;
                        currentOffset += 1;


                        WriteInlineValueOf_ecfa8ebe7c024a2e89e5cf5b97917be1(spanWriter, span, index1Value, index1Offset);


                        if (8 > vtableLength)
                        {
                            vtableLength = 8;
                        }
                    }

                    spanWriter.WriteUShort(vtable, (ushort)(index1Offset - tableStart), 6);
                    int tableLength = currentOffset - tableStart;
                    context.Offset -= 20 - tableLength;
                    spanWriter.WriteUShort(vtable, (ushort)vtableLength, 0);
                    spanWriter.WriteUShort(vtable, (ushort)tableLength, sizeof(ushort));
                    int vtablePosition = context.FinishVTable(span, vtable.Slice(0, vtableLength));
                    spanWriter.WriteInt(span, tableStart - vtablePosition, tableStart);

                    if (index3Offset != tableStart)
                    {


                        WriteInlineValueOf_d1995991f334431ca98faea14004c554(spanWriter, span, index3Value!, index3Offset, context, tableMetadata_d0741c5621cf4accaea076b6ce8d2046.location);

                    }


                    if (index0Offset != tableStart)
                    {


                        WriteInlineValueOf_e068784a7f834c47b16f6a28392da573(spanWriter, span, index0Value!, index0Offset, context);

                    }

                }
            }

            private static class tableMetadata_d0741c5621cf4accaea076b6ce8d2046
            {

                public static readonly TableFieldContext list = new TableFieldContext(
                    "Samples.SchemaFilesExample2.FooBarContainer.list",
                    false,
                    false);

                public static readonly TableFieldContext initialized = new TableFieldContext(
                    "Samples.SchemaFilesExample2.FooBarContainer.initialized",
                    false,
                    false);

                public static readonly TableFieldContext fruit = new TableFieldContext(
                    "Samples.SchemaFilesExample2.FooBarContainer.fruit",
                    false,
                    false);

                public static readonly TableFieldContext location = new TableFieldContext(
                    "Samples.SchemaFilesExample2.FooBarContainer.location",
                    false,
                    false);
            }



            private static int GetMaxSizeOf_e068784a7f834c47b16f6a28392da573(global::System.Collections.Generic.IList<Samples.SchemaFilesExample2.FooBar> value)
            {
                checked
                {

                    int count = value.Count;
                    int runningSum = 14;

                    if (value is Samples.SchemaFilesExample2.FooBar[] array)
                    {

                        for (int i = 0; i < array.Length; i = unchecked(i + 1))
                        {
                            var current = array[i];

                            SerializationHelpers.EnsureNonNull(current);
                            runningSum += GetMaxSizeOf_2c18be4438f1430b8f4c84ebd30a01de(current);
                        }
                    }
                    else if (value is List<Samples.SchemaFilesExample2.FooBar> realList)
                    {

                        int i;
                        for (i = 0; i < count; i = unchecked(i + 1))
                        {
                            var current = realList[i];

                            SerializationHelpers.EnsureNonNull(current);
                            runningSum += GetMaxSizeOf_2c18be4438f1430b8f4c84ebd30a01de(current);
                        }
                    }
                    else
                    {

                        int i;
                        for (i = 0; i < count; i = unchecked(i + 1))
                        {
                            var current = value[i];

                            SerializationHelpers.EnsureNonNull(current);
                            runningSum += GetMaxSizeOf_2c18be4438f1430b8f4c84ebd30a01de(current);
                        }
                    }

                    return runningSum;
                }
            }

            private static global::System.Collections.Generic.IList<Samples.SchemaFilesExample2.FooBar> Read_e068784a7f834c47b16f6a28392da573<TInputBuffer>(
                TInputBuffer buffer,
                int offset
                , TableFieldContext fieldContext) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return (new FlatBufferVector_b8f26a91a4f946a2ad14ff71dded481d<TInputBuffer>(
                    buffer,
                    offset + buffer.ReadUOffset(offset),
                    4,
                    fieldContext)).FlatBufferVectorToList();
                }
            }

            public sealed class FlatBufferVector_b8f26a91a4f946a2ad14ff71dded481d<TInputBuffer> : FlatBufferVector<global::Samples.SchemaFilesExample2.FooBar, TInputBuffer>
                where TInputBuffer : IInputBuffer
            {
                public FlatBufferVector_b8f26a91a4f946a2ad14ff71dded481d(
                    TInputBuffer memory,
                    int offset,
                    int itemSize,
                    TableFieldContext fieldContext) : base(memory, offset, itemSize, fieldContext)
                {
                    checked
                    {
                    }
                }

                protected override void ParseItem(
                    TInputBuffer memory,
                    int offset,
                    TableFieldContext fieldContext,
                    out global::Samples.SchemaFilesExample2.FooBar item)
                {
                    checked
                    {
                        item = Read_2c18be4438f1430b8f4c84ebd30a01de(memory, offset);
                    }
                }

                protected override void WriteThrough(global::Samples.SchemaFilesExample2.FooBar item, Span<byte> data)
                {
                    checked
                    {
                        throw new NotSupportedException("write through is not available for this type");
                    }
                }
            }



            private static void WriteInlineValueOf_e068784a7f834c47b16f6a28392da573<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                global::System.Collections.Generic.IList<Samples.SchemaFilesExample2.FooBar> value,
                int offset
                , SerializationContext context
                ) where TSpanWriter : ISpanWriter
            {
                checked
                {

                    int count = value.Count;
                    int vectorOffset = context.AllocateVector(4, count, 4);
                    spanWriter.WriteUOffset(span, offset, vectorOffset);
                    spanWriter.WriteInt(span, count, vectorOffset);
                    vectorOffset += sizeof(int);


                    if (value is Samples.SchemaFilesExample2.FooBar[] array)
                    {

                        for (int i = 0; i < array.Length; i = unchecked(i + 1))
                        {
                            var current = array[i];

                            SerializationHelpers.EnsureNonNull(current);
                            WriteInlineValueOf_2c18be4438f1430b8f4c84ebd30a01de(spanWriter, span, current, vectorOffset, context);
                            vectorOffset += 4;
                        }
                    }
                    else if (value is List<Samples.SchemaFilesExample2.FooBar> realList)
                    {

                        int i;
                        for (i = 0; i < count; i = unchecked(i + 1))
                        {
                            var current = realList[i];

                            SerializationHelpers.EnsureNonNull(current);
                            WriteInlineValueOf_2c18be4438f1430b8f4c84ebd30a01de(spanWriter, span, current, vectorOffset, context);
                            vectorOffset += 4;
                        }
                    }
                    else
                    {

                        int i;
                        for (i = 0; i < count; i = unchecked(i + 1))
                        {
                            var current = value[i];

                            SerializationHelpers.EnsureNonNull(current);
                            WriteInlineValueOf_2c18be4438f1430b8f4c84ebd30a01de(spanWriter, span, current, vectorOffset, context);
                            vectorOffset += 4;
                        }
                    }
                }
            }

            private static int GetMaxSizeOf_2c18be4438f1430b8f4c84ebd30a01de(global::Samples.SchemaFilesExample2.FooBar value)
            {
                checked
                {

                    int runningSum = 63 + 13;
                    var index1Value = value.name;

                    if (!(index1Value is null))
                    {
                        runningSum += GetMaxSizeOf_d1995991f334431ca98faea14004c554(index1Value);
                    }
                    return runningSum;

                }
            }

            private static global::Samples.SchemaFilesExample2.FooBar Read_2c18be4438f1430b8f4c84ebd30a01de<TInputBuffer>(
                TInputBuffer buffer,
                int offset
                ) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return tableReader_8707f0bfbddc41fd8a4fa26a5316a045<TInputBuffer>.GetOrCreate(buffer, offset + buffer.ReadUOffset(offset));
                }
            }

            private sealed class tableReader_8707f0bfbddc41fd8a4fa26a5316a045<TInputBuffer>
                : global::Samples.SchemaFilesExample2.FooBar
                , global::FlatSharp.IFlatBufferDeserializedObject
                where TInputBuffer : IInputBuffer
            {
                private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                    = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.GreedyMutable);



                private Samples.SchemaFilesExample2.Bar? __index0Value;
                private System.String? __index1Value;
                private System.Double __index2Value;
                private System.Byte __index3Value;

                public static tableReader_8707f0bfbddc41fd8a4fa26a5316a045<TInputBuffer> GetOrCreate(TInputBuffer buffer, int offset)
                {
                    checked
                    {

                        var item = new tableReader_8707f0bfbddc41fd8a4fa26a5316a045<TInputBuffer>(buffer, offset);
                        return item;

                    }
                }

                private tableReader_8707f0bfbddc41fd8a4fa26a5316a045(TInputBuffer buffer, int offset) : base(__CtorContext)
                {
                    checked
                    {
                        VTable4.Create<TInputBuffer>(buffer, offset, out var vtable);
                        this.__index0Value = ReadIndex0Value(buffer, offset, vtable);
                        this.__index1Value = ReadIndex1Value(buffer, offset, vtable);
                        this.__index2Value = ReadIndex2Value(buffer, offset, vtable);
                        this.__index3Value = ReadIndex3Value(buffer, offset, vtable);
                        base.OnFlatSharpDeserialized(__CtorContext);
                    }
                }

                global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(Samples.SchemaFilesExample2.FooBar);
                global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
                global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => null;
                bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => false;


                public override Samples.SchemaFilesExample2.Bar? sibling
                {
                    get
                    {
                        checked
                        {
                            return this.__index0Value;
                        }
                    }

                    set
                    {
                        checked
                        {
                            this.__index0Value = value;
                        }
                    }
                }

                public override System.String? name
                {
                    get
                    {
                        checked
                        {
                            return this.__index1Value;
                        }
                    }

                    set
                    {
                        checked
                        {
                            this.__index1Value = value;
                        }
                    }
                }

                public override System.Double rating
                {
                    get
                    {
                        checked
                        {
                            return this.__index2Value;
                        }
                    }

                    set
                    {
                        checked
                        {
                            this.__index2Value = value;
                        }
                    }
                }

                public override System.Byte postfix
                {
                    get
                    {
                        checked
                        {
                            return this.__index3Value;
                        }
                    }

                    set
                    {
                        checked
                        {
                            this.__index3Value = value;
                        }
                    }
                }

                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static Samples.SchemaFilesExample2.Bar? ReadIndex0Value(
                    TInputBuffer buffer,
                    int offset,
                    VTable4 vtable)
                {
                    checked
                    {


                        int absoluteLocation;
                        {
                            int relativeOffset = vtable.OffsetOf(buffer, 0);
                            if (relativeOffset == 0)
                            {
                                return null;
                            }

                            absoluteLocation = offset + relativeOffset;
                        }

                        return Read_39f53e9e9b0e42139cdb3fbc4e9415d9(buffer, absoluteLocation);
                    }
                }

                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static System.String? ReadIndex1Value(
                    TInputBuffer buffer,
                    int offset,
                    VTable4 vtable)
                {
                    checked
                    {


                        int absoluteLocation;
                        {
                            int relativeOffset = vtable.OffsetOf(buffer, 1);
                            if (relativeOffset == 0)
                            {
                                return null;
                            }

                            absoluteLocation = offset + relativeOffset;
                        }

                        return Read_d1995991f334431ca98faea14004c554(buffer, absoluteLocation);
                    }
                }

                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static System.Double ReadIndex2Value(
                    TInputBuffer buffer,
                    int offset,
                    VTable4 vtable)
                {
                    checked
                    {


                        int absoluteLocation;
                        {
                            int relativeOffset = vtable.OffsetOf(buffer, 2);
                            if (relativeOffset == 0)
                            {
                                return default(System.Double);
                            }

                            absoluteLocation = offset + relativeOffset;
                        }

                        return Read_806ceb23adbb44078a521a9bae237d5f(buffer, absoluteLocation);
                    }
                }

                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static System.Byte ReadIndex3Value(
                    TInputBuffer buffer,
                    int offset,
                    VTable4 vtable)
                {
                    checked
                    {


                        int absoluteLocation;
                        {
                            int relativeOffset = vtable.OffsetOf(buffer, 3);
                            if (relativeOffset == 0)
                            {
                                return default(System.Byte);
                            }

                            absoluteLocation = offset + relativeOffset;
                        }

                        return Read_b9210f21cc654102afa56c5b387f3a15(buffer, absoluteLocation);
                    }
                }
            }



            private static void WriteInlineValueOf_2c18be4438f1430b8f4c84ebd30a01de<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                global::Samples.SchemaFilesExample2.FooBar value,
                int offset
                , SerializationContext context
                ) where TSpanWriter : ISpanWriter
            {
                checked
                {

                    int tableStart = context.AllocateSpace(60, sizeof(int));
                    spanWriter.WriteUOffset(span, offset, tableStart);
                    int currentOffset = tableStart + sizeof(int); // skip past vtable soffset_t.

                    int vtableLength = 4;
                    Span<byte> vtable = stackalloc byte[12];

                    var index0Value = value.sibling;
                    var index1Value = value.name;
                    var index2Value = value.rating;
                    var index3Value = value.postfix;

                    var index2Offset = tableStart;
                    if (index2Value != default(System.Double))
                    {

                        currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 8);
                        index2Offset = currentOffset;
                        currentOffset += 8;


                        WriteInlineValueOf_806ceb23adbb44078a521a9bae237d5f(spanWriter, span, index2Value, index2Offset);


                        if (10 > vtableLength)
                        {
                            vtableLength = 10;
                        }
                    }

                    spanWriter.WriteUShort(vtable, (ushort)(index2Offset - tableStart), 8);

                    var index0Offset = tableStart;
                    if (!(index0Value is null))
                    {

                        currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 8);
                        index0Offset = currentOffset;
                        currentOffset += 26;


                        WriteInlineValueOf_39f53e9e9b0e42139cdb3fbc4e9415d9(spanWriter, span, index0Value!, index0Offset);


                        if (6 > vtableLength)
                        {
                            vtableLength = 6;
                        }
                    }

                    spanWriter.WriteUShort(vtable, (ushort)(index0Offset - tableStart), 4);

                    var index1Offset = tableStart;
                    if (!(index1Value is null))
                    {

                        currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 4);
                        index1Offset = currentOffset;
                        currentOffset += 4;


                        if (8 > vtableLength)
                        {
                            vtableLength = 8;
                        }
                    }

                    spanWriter.WriteUShort(vtable, (ushort)(index1Offset - tableStart), 6);

                    var index3Offset = tableStart;
                    if (index3Value != default(System.Byte))
                    {

                        currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 1);
                        index3Offset = currentOffset;
                        currentOffset += 1;


                        WriteInlineValueOf_b9210f21cc654102afa56c5b387f3a15(spanWriter, span, index3Value, index3Offset);

                        vtableLength = 12;
                    }

                    spanWriter.WriteUShort(vtable, (ushort)(index3Offset - tableStart), 10);
                    int tableLength = currentOffset - tableStart;
                    context.Offset -= 60 - tableLength;
                    spanWriter.WriteUShort(vtable, (ushort)vtableLength, 0);
                    spanWriter.WriteUShort(vtable, (ushort)tableLength, sizeof(ushort));
                    int vtablePosition = context.FinishVTable(span, vtable.Slice(0, vtableLength));
                    spanWriter.WriteInt(span, tableStart - vtablePosition, tableStart);

                    if (index1Offset != tableStart)
                    {


                        WriteInlineValueOf_d1995991f334431ca98faea14004c554(spanWriter, span, index1Value!, index1Offset, context, tableMetadata_2a07f2013fa84e9d967b9bebcdae9683.name);

                    }

                }
            }

            private static class tableMetadata_2a07f2013fa84e9d967b9bebcdae9683
            {

                public static readonly TableFieldContext sibling = new TableFieldContext(
                    "Samples.SchemaFilesExample2.FooBar.sibling",
                    false,
                    false);

                public static readonly TableFieldContext name = new TableFieldContext(
                    "Samples.SchemaFilesExample2.FooBar.name",
                    false,
                    false);

                public static readonly TableFieldContext rating = new TableFieldContext(
                    "Samples.SchemaFilesExample2.FooBar.rating",
                    false,
                    false);

                public static readonly TableFieldContext postfix = new TableFieldContext(
                    "Samples.SchemaFilesExample2.FooBar.postfix",
                    false,
                    false);
            }


            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static int GetMaxSizeOf_39f53e9e9b0e42139cdb3fbc4e9415d9(global::Samples.SchemaFilesExample2.Bar value)
            {
                checked
                {
                    return 33;
                }
            }

            private static global::Samples.SchemaFilesExample2.Bar Read_39f53e9e9b0e42139cdb3fbc4e9415d9<TInputBuffer>(
                TInputBuffer buffer,
                int offset
                ) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return structReader_5ee65fff0ed049fdb3a359e99af8112c<TInputBuffer>.GetOrCreate(buffer, offset);
                }
            }

            private sealed class structReader_5ee65fff0ed049fdb3a359e99af8112c<TInputBuffer>
                : global::Samples.SchemaFilesExample2.Bar
                , global::FlatSharp.IFlatBufferDeserializedObject
                where TInputBuffer : IInputBuffer
            {
                private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                    = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.GreedyMutable);



                private Samples.SchemaFilesExample2.Foo __index0Value;
                private System.Int32 __index1Value;
                private System.Single __index2Value;
                private System.UInt16 __index3Value;

                public static structReader_5ee65fff0ed049fdb3a359e99af8112c<TInputBuffer> GetOrCreate(TInputBuffer buffer, int offset)
                {
                    checked
                    {

                        var item = new structReader_5ee65fff0ed049fdb3a359e99af8112c<TInputBuffer>(buffer, offset);
                        return item;

                    }
                }

                private structReader_5ee65fff0ed049fdb3a359e99af8112c(TInputBuffer buffer, int offset) : base(__CtorContext)
                {
                    checked
                    {
                        this.__index0Value = ReadIndex0Value(buffer, offset, default);
                        this.__index1Value = ReadIndex1Value(buffer, offset, default);
                        this.__index2Value = ReadIndex2Value(buffer, offset, default);
                        this.__index3Value = ReadIndex3Value(buffer, offset, default);
                        base.OnFlatSharpDeserialized(__CtorContext);
                    }
                }

                global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(Samples.SchemaFilesExample2.Bar);
                global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
                global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => null;
                bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => false;


                public override Samples.SchemaFilesExample2.Foo parent
                {
                    get
                    {
                        checked
                        {
                            return this.__index0Value;
                        }
                    }

                    set
                    {
                        checked
                        {
                            this.__index0Value = value;
                        }
                    }
                }

                public override System.Int32 time
                {
                    get
                    {
                        checked
                        {
                            return this.__index1Value;
                        }
                    }

                    set
                    {
                        checked
                        {
                            this.__index1Value = value;
                        }
                    }
                }

                public override System.Single ratio
                {
                    get
                    {
                        checked
                        {
                            return this.__index2Value;
                        }
                    }

                    set
                    {
                        checked
                        {
                            this.__index2Value = value;
                        }
                    }
                }

                public override System.UInt16 size
                {
                    get
                    {
                        checked
                        {
                            return this.__index3Value;
                        }
                    }

                    set
                    {
                        checked
                        {
                            this.__index3Value = value;
                        }
                    }
                }

                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static Samples.SchemaFilesExample2.Foo ReadIndex0Value(
                    TInputBuffer buffer,
                    int offset,
                    VTable4 vtable)
                {
                    checked
                    {
                        return Read_7bd61cca74724b3ab719eec3db97b82b(buffer, offset + 0);
                    }
                }

                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static System.Int32 ReadIndex1Value(
                    TInputBuffer buffer,
                    int offset,
                    VTable4 vtable)
                {
                    checked
                    {
                        return Read_d32cadce48f24b69897173dc981d0edb(buffer, offset + 16);
                    }
                }

                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static System.Single ReadIndex2Value(
                    TInputBuffer buffer,
                    int offset,
                    VTable4 vtable)
                {
                    checked
                    {
                        return Read_a9e49b11587a458cae1b9e18d8757f31(buffer, offset + 20);
                    }
                }

                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static System.UInt16 ReadIndex3Value(
                    TInputBuffer buffer,
                    int offset,
                    VTable4 vtable)
                {
                    checked
                    {
                        return Read_1c15075fc36a4671b0547b62675af9c8(buffer, offset + 24);
                    }
                }
            }



            private static void WriteInlineValueOf_39f53e9e9b0e42139cdb3fbc4e9415d9<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                global::Samples.SchemaFilesExample2.Bar value,
                int offset

                ) where TSpanWriter : ISpanWriter
            {
                checked
                {
                    Span<byte> scopedSpan = span.Slice(offset, 26);

                    if (value is null)
                    {
                        scopedSpan.Clear();
                        return;
                    }

                    WriteInlineValueOf_7bd61cca74724b3ab719eec3db97b82b(spanWriter, scopedSpan, value.parent, 0);
                    WriteInlineValueOf_d32cadce48f24b69897173dc981d0edb(spanWriter, scopedSpan, value.time, 16);
                    WriteInlineValueOf_a9e49b11587a458cae1b9e18d8757f31(spanWriter, scopedSpan, value.ratio, 20);
                    WriteInlineValueOf_1c15075fc36a4671b0547b62675af9c8(spanWriter, scopedSpan, value.size, 24);
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static int GetMaxSizeOf_7bd61cca74724b3ab719eec3db97b82b(global::Samples.SchemaFilesExample2.Foo value)
            {
                checked
                {
                    return 23;
                }
            }

            private static global::Samples.SchemaFilesExample2.Foo Read_7bd61cca74724b3ab719eec3db97b82b<TInputBuffer>(
                TInputBuffer buffer,
                int offset
                ) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return structReader_a01c5c504d82448e85dd3bc9d66048b2<TInputBuffer>.GetOrCreate(buffer, offset);
                }
            }

            private sealed class structReader_a01c5c504d82448e85dd3bc9d66048b2<TInputBuffer>
                : global::Samples.SchemaFilesExample2.Foo
                , global::FlatSharp.IFlatBufferDeserializedObject
                where TInputBuffer : IInputBuffer
            {
                private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                    = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.GreedyMutable);



                private System.UInt64 __index0Value;
                private System.Int16 __index1Value;
                private System.SByte __index2Value;
                private System.UInt32 __index3Value;

                public static structReader_a01c5c504d82448e85dd3bc9d66048b2<TInputBuffer> GetOrCreate(TInputBuffer buffer, int offset)
                {
                    checked
                    {

                        var item = new structReader_a01c5c504d82448e85dd3bc9d66048b2<TInputBuffer>(buffer, offset);
                        return item;

                    }
                }

                private structReader_a01c5c504d82448e85dd3bc9d66048b2(TInputBuffer buffer, int offset) : base(__CtorContext)
                {
                    checked
                    {
                        this.__index0Value = ReadIndex0Value(buffer, offset, default);
                        this.__index1Value = ReadIndex1Value(buffer, offset, default);
                        this.__index2Value = ReadIndex2Value(buffer, offset, default);
                        this.__index3Value = ReadIndex3Value(buffer, offset, default);
                        base.OnFlatSharpDeserialized(__CtorContext);
                    }
                }

                global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(Samples.SchemaFilesExample2.Foo);
                global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
                global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => null;
                bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => false;


                public override System.UInt64 id
                {
                    get
                    {
                        checked
                        {
                            return this.__index0Value;
                        }
                    }

                    set
                    {
                        checked
                        {
                            this.__index0Value = value;
                        }
                    }
                }

                public override System.Int16 count
                {
                    get
                    {
                        checked
                        {
                            return this.__index1Value;
                        }
                    }

                    set
                    {
                        checked
                        {
                            this.__index1Value = value;
                        }
                    }
                }

                public override System.SByte prefix
                {
                    get
                    {
                        checked
                        {
                            return this.__index2Value;
                        }
                    }

                    set
                    {
                        checked
                        {
                            this.__index2Value = value;
                        }
                    }
                }

                public override System.UInt32 length
                {
                    get
                    {
                        checked
                        {
                            return this.__index3Value;
                        }
                    }

                    set
                    {
                        checked
                        {
                            this.__index3Value = value;
                        }
                    }
                }

                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static System.UInt64 ReadIndex0Value(
                    TInputBuffer buffer,
                    int offset,
                    VTable4 vtable)
                {
                    checked
                    {
                        return Read_5341b5c0d3994520844ca608319b41af(buffer, offset + 0);
                    }
                }

                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static System.Int16 ReadIndex1Value(
                    TInputBuffer buffer,
                    int offset,
                    VTable4 vtable)
                {
                    checked
                    {
                        return Read_eeee3323accc414a90dbc92beae13008(buffer, offset + 8);
                    }
                }

                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static System.SByte ReadIndex2Value(
                    TInputBuffer buffer,
                    int offset,
                    VTable4 vtable)
                {
                    checked
                    {
                        return Read_217a753b851f4d43b4429d866eacec19(buffer, offset + 10);
                    }
                }

                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static System.UInt32 ReadIndex3Value(
                    TInputBuffer buffer,
                    int offset,
                    VTable4 vtable)
                {
                    checked
                    {
                        return Read_c891f90009e2416a976d066b31080736(buffer, offset + 12);
                    }
                }
            }



            private static void WriteInlineValueOf_7bd61cca74724b3ab719eec3db97b82b<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                global::Samples.SchemaFilesExample2.Foo value,
                int offset

                ) where TSpanWriter : ISpanWriter
            {
                checked
                {
                    Span<byte> scopedSpan = span.Slice(offset, 16);

                    if (value is null)
                    {
                        scopedSpan.Clear();
                        return;
                    }

                    WriteInlineValueOf_5341b5c0d3994520844ca608319b41af(spanWriter, scopedSpan, value.id, 0);
                    WriteInlineValueOf_eeee3323accc414a90dbc92beae13008(spanWriter, scopedSpan, value.count, 8);
                    WriteInlineValueOf_217a753b851f4d43b4429d866eacec19(spanWriter, scopedSpan, value.prefix, 10);
                    WriteInlineValueOf_c891f90009e2416a976d066b31080736(spanWriter, scopedSpan, value.length, 12);
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static int GetMaxSizeOf_5341b5c0d3994520844ca608319b41af(global::System.UInt64 value)
            {
                checked
                {
                    return 15;
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static global::System.UInt64 Read_5341b5c0d3994520844ca608319b41af<TInputBuffer>(
                TInputBuffer buffer,
                int offset
                ) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return buffer.ReadULong(offset);
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static void WriteInlineValueOf_5341b5c0d3994520844ca608319b41af<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                global::System.UInt64 value,
                int offset

                ) where TSpanWriter : ISpanWriter
            {
                checked
                {
                    spanWriter.WriteULong(span, value, offset);
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static int GetMaxSizeOf_eeee3323accc414a90dbc92beae13008(global::System.Int16 value)
            {
                checked
                {
                    return 3;
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static global::System.Int16 Read_eeee3323accc414a90dbc92beae13008<TInputBuffer>(
                TInputBuffer buffer,
                int offset
                ) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return buffer.ReadShort(offset);
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static void WriteInlineValueOf_eeee3323accc414a90dbc92beae13008<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                global::System.Int16 value,
                int offset

                ) where TSpanWriter : ISpanWriter
            {
                checked
                {
                    spanWriter.WriteShort(span, value, offset);
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static int GetMaxSizeOf_217a753b851f4d43b4429d866eacec19(global::System.SByte value)
            {
                checked
                {
                    return 1;
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static global::System.SByte Read_217a753b851f4d43b4429d866eacec19<TInputBuffer>(
                TInputBuffer buffer,
                int offset
                ) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return buffer.ReadSByte(offset);
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static void WriteInlineValueOf_217a753b851f4d43b4429d866eacec19<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                global::System.SByte value,
                int offset

                ) where TSpanWriter : ISpanWriter
            {
                checked
                {
                    spanWriter.WriteSByte(span, value, offset);
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static int GetMaxSizeOf_c891f90009e2416a976d066b31080736(global::System.UInt32 value)
            {
                checked
                {
                    return 7;
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static global::System.UInt32 Read_c891f90009e2416a976d066b31080736<TInputBuffer>(
                TInputBuffer buffer,
                int offset
                ) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return buffer.ReadUInt(offset);
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static void WriteInlineValueOf_c891f90009e2416a976d066b31080736<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                global::System.UInt32 value,
                int offset

                ) where TSpanWriter : ISpanWriter
            {
                checked
                {
                    spanWriter.WriteUInt(span, value, offset);
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static int GetMaxSizeOf_d32cadce48f24b69897173dc981d0edb(global::System.Int32 value)
            {
                checked
                {
                    return 7;
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static global::System.Int32 Read_d32cadce48f24b69897173dc981d0edb<TInputBuffer>(
                TInputBuffer buffer,
                int offset
                ) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return buffer.ReadInt(offset);
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static void WriteInlineValueOf_d32cadce48f24b69897173dc981d0edb<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                global::System.Int32 value,
                int offset

                ) where TSpanWriter : ISpanWriter
            {
                checked
                {
                    spanWriter.WriteInt(span, value, offset);
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static int GetMaxSizeOf_a9e49b11587a458cae1b9e18d8757f31(global::System.Single value)
            {
                checked
                {
                    return 7;
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static global::System.Single Read_a9e49b11587a458cae1b9e18d8757f31<TInputBuffer>(
                TInputBuffer buffer,
                int offset
                ) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return buffer.ReadFloat(offset);
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static void WriteInlineValueOf_a9e49b11587a458cae1b9e18d8757f31<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                global::System.Single value,
                int offset

                ) where TSpanWriter : ISpanWriter
            {
                checked
                {
                    spanWriter.WriteFloat(span, value, offset);
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static int GetMaxSizeOf_1c15075fc36a4671b0547b62675af9c8(global::System.UInt16 value)
            {
                checked
                {
                    return 3;
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static global::System.UInt16 Read_1c15075fc36a4671b0547b62675af9c8<TInputBuffer>(
                TInputBuffer buffer,
                int offset
                ) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return buffer.ReadUShort(offset);
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static void WriteInlineValueOf_1c15075fc36a4671b0547b62675af9c8<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                global::System.UInt16 value,
                int offset

                ) where TSpanWriter : ISpanWriter
            {
                checked
                {
                    spanWriter.WriteUShort(span, value, offset);
                }
            }

            private static int GetMaxSizeOf_d1995991f334431ca98faea14004c554(global::System.String value)
            {
                checked
                {
                    return SerializationHelpers.GetMaxSize(value);
                }
            }

            private static global::System.String Read_d1995991f334431ca98faea14004c554<TInputBuffer>(
                TInputBuffer buffer,
                int offset
                ) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return buffer.ReadString(offset);
                }
            }

            private static void WriteInlineValueOf_d1995991f334431ca98faea14004c554<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                global::System.String value,
                int offset
                , SerializationContext context
                , TableFieldContext fieldContext) where TSpanWriter : ISpanWriter
            {
                checked
                {

                    spanWriter.WriteString(
                        span,
                        value,
                        offset,
                        context);

                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static int GetMaxSizeOf_806ceb23adbb44078a521a9bae237d5f(global::System.Double value)
            {
                checked
                {
                    return 15;
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static global::System.Double Read_806ceb23adbb44078a521a9bae237d5f<TInputBuffer>(
                TInputBuffer buffer,
                int offset
                ) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return buffer.ReadDouble(offset);
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static void WriteInlineValueOf_806ceb23adbb44078a521a9bae237d5f<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                global::System.Double value,
                int offset

                ) where TSpanWriter : ISpanWriter
            {
                checked
                {
                    spanWriter.WriteDouble(span, value, offset);
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static int GetMaxSizeOf_b9210f21cc654102afa56c5b387f3a15(global::System.Byte value)
            {
                checked
                {
                    return 1;
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static global::System.Byte Read_b9210f21cc654102afa56c5b387f3a15<TInputBuffer>(
                TInputBuffer buffer,
                int offset
                ) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return buffer.ReadByte(offset);
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static void WriteInlineValueOf_b9210f21cc654102afa56c5b387f3a15<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                global::System.Byte value,
                int offset

                ) where TSpanWriter : ISpanWriter
            {
                checked
                {
                    spanWriter.WriteByte(span, value, offset);
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static int GetMaxSizeOf_ecfa8ebe7c024a2e89e5cf5b97917be1(global::System.Boolean value)
            {
                checked
                {
                    return 1;
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static global::System.Boolean Read_ecfa8ebe7c024a2e89e5cf5b97917be1<TInputBuffer>(
                TInputBuffer buffer,
                int offset
                ) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return buffer.ReadBool(offset);
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static void WriteInlineValueOf_ecfa8ebe7c024a2e89e5cf5b97917be1<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                global::System.Boolean value,
                int offset

                ) where TSpanWriter : ISpanWriter
            {
                checked
                {
                    spanWriter.WriteBool(span, value, offset);
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static int GetMaxSizeOf_23f83094f7d647daadf68cfc85f1ff54(global::Samples.SchemaFilesExample2.Fruit value)
            {
                checked
                {
                    return GetMaxSizeOf_217a753b851f4d43b4429d866eacec19((global::System.SByte)value);
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static global::Samples.SchemaFilesExample2.Fruit Read_23f83094f7d647daadf68cfc85f1ff54<TInputBuffer>(
                TInputBuffer buffer,
                int offset
                ) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return (Samples.SchemaFilesExample2.Fruit)Read_217a753b851f4d43b4429d866eacec19(buffer, offset);
                }
            }

            [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static void WriteInlineValueOf_23f83094f7d647daadf68cfc85f1ff54<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                global::Samples.SchemaFilesExample2.Fruit value,
                int offset

                ) where TSpanWriter : ISpanWriter
            {
                checked
                {
                    WriteInlineValueOf_217a753b851f4d43b4429d866eacec19(spanWriter, span, (global::System.SByte)value, offset);
                }
            }
        }

        #endregion
    }

}

namespace Samples.SchemaFilesExample2
{
    [FlatBufferTable()]
    [System.Runtime.CompilerServices.CompilerGenerated]
    public partial class OtherTable
        : object
        , IFlatBufferSerializable<Samples.SchemaFilesExample2.OtherTable>
    {
#pragma warning disable CS8618
        public OtherTable()
        {
            checked
            {
                this.name = default!;
                this.OnInitialized(null);
            }
        }

#pragma warning restore CS8618
#pragma warning disable CS8618
        protected OtherTable(FlatBufferDeserializationContext context)
        {
            checked
            {
            }
        }

#pragma warning restore CS8618
        public OtherTable(OtherTable source)
        {
            checked
            {
                this.name = FlatSharp.Compiler.Generated.CloneHelpers_7c6e8c12790d44499a7a3929bb6d060c.Clone(source.name);
                this.OnInitialized(null);
            }
        }

        partial void OnInitialized(FlatBufferDeserializationContext? context);
        protected void OnFlatSharpDeserialized(FlatBufferDeserializationContext? context) => this.OnInitialized(context);


        [FlatBufferItemAttribute(0)]
        public virtual string? name { get; set; }
        public static ISerializer<Samples.SchemaFilesExample2.OtherTable> Serializer { get; } = new GeneratedSerializer().AsISerializer();

        ISerializer IFlatBufferSerializable.Serializer => Serializer;
        ISerializer<Samples.SchemaFilesExample2.OtherTable> IFlatBufferSerializable<Samples.SchemaFilesExample2.OtherTable>.Serializer => Serializer;

        #region Serializer for Samples.SchemaFilesExample2.OtherTable

        [FlatSharpGeneratedSerializerAttribute(FlatBufferDeserializationOption.Lazy)]
        private sealed class GeneratedSerializer : IGeneratedSerializer<global::Samples.SchemaFilesExample2.OtherTable>
        {
            // Method generated to help AOT compilers make good decisions about generics.
            public void __AotHelper()
            {
                checked
                {
                    this.Write<ISpanWriter>(default!, new byte[10], default!, default!, default!);
                    this.Write<SpanWriter>(default!, new byte[10], default!, default!, default!);

                    this.Parse<IInputBuffer>(default!, 0);
                    this.Parse<MemoryInputBuffer>(default!, 0);
                    this.Parse<ReadOnlyMemoryInputBuffer>(default!, 0);
                    this.Parse<ArrayInputBuffer>(default!, 0);
                    this.Parse<ArraySegmentInputBuffer>(default!, 0);

                    throw new InvalidOperationException("__AotHelper is not intended to be invoked");
                }
            }

            public GeneratedSerializer()
            {
                checked
                {
                    string? runtimeVersion = System.Reflection.CustomAttributeExtensions.GetCustomAttribute<System.Reflection.AssemblyFileVersionAttribute>(typeof(SpanWriter).Assembly)?.Version;
                    string compilerVersion = "6.2.1";

                    if (runtimeVersion != compilerVersion)
                    {
                        throw new InvalidOperationException($"FlatSharp runtime version didn't match compiler version. Ensure all FlatSharp NuGet packages use the same version. Runtime = '{runtimeVersion}', Compiler = '{compilerVersion}'.");
                    }

                    if (string.IsNullOrEmpty(runtimeVersion))
                    {
                        throw new InvalidOperationException($"Unable to find FlatSharp.Runtime version. Ensure all FlatSharp NuGet packages use the same version. Runtime = '{runtimeVersion}', Compiler = '{compilerVersion}'.");
                    }
                }
            }

            public FlatSharp.FlatBufferDeserializationOption DeserializationOption => FlatSharp.FlatBufferDeserializationOption.Lazy;


            public void Write<TSpanWriter>(TSpanWriter writer, Span<byte> target, global::Samples.SchemaFilesExample2.OtherTable root, int offset, SerializationContext context)
                where TSpanWriter : ISpanWriter
            {
                checked
                {
                    WriteInlineValueOf_ee18549ef93440a9aeed527f9f1b5e04(writer, target, root, offset, context);
                }
            }

            public int GetMaxSize(global::Samples.SchemaFilesExample2.OtherTable root)
            {
                checked
                {
                    return GetMaxSizeOf_ee18549ef93440a9aeed527f9f1b5e04(root);
                }
            }

            public global::Samples.SchemaFilesExample2.OtherTable Parse<TInputBuffer>(TInputBuffer buffer, int offset)
                where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return Read_ee18549ef93440a9aeed527f9f1b5e04(buffer, offset);
                }
            }

            private static int GetMaxSizeOf_ee18549ef93440a9aeed527f9f1b5e04(global::Samples.SchemaFilesExample2.OtherTable value)
            {
                checked
                {

                    int runningSum = 14 + 7;
                    var index0Value = value.name;

                    if (!(index0Value is null))
                    {
                        runningSum += GetMaxSizeOf_8fc5c31f5fcf4b929a98a6fe8086360e(index0Value);
                    }
                    return runningSum;

                }
            }

            private static global::Samples.SchemaFilesExample2.OtherTable Read_ee18549ef93440a9aeed527f9f1b5e04<TInputBuffer>(
                TInputBuffer buffer,
                int offset
                ) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return tableReader_b41fadba6c8043eaa1e56de7128275b3<TInputBuffer>.GetOrCreate(buffer, offset + buffer.ReadUOffset(offset));
                }
            }

            private sealed class tableReader_b41fadba6c8043eaa1e56de7128275b3<TInputBuffer>
                : global::Samples.SchemaFilesExample2.OtherTable
                , global::FlatSharp.IFlatBufferDeserializedObject
                where TInputBuffer : IInputBuffer
            {
                private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                    = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.Lazy);



                private TInputBuffer __buffer;
                private int __offset;
                private VTable4 __vtable;

                public static tableReader_b41fadba6c8043eaa1e56de7128275b3<TInputBuffer> GetOrCreate(TInputBuffer buffer, int offset)
                {
                    checked
                    {

                        var item = new tableReader_b41fadba6c8043eaa1e56de7128275b3<TInputBuffer>(buffer, offset);
                        return item;

                    }
                }

                private tableReader_b41fadba6c8043eaa1e56de7128275b3(TInputBuffer buffer, int offset) : base(__CtorContext)
                {
                    checked
                    {
                        this.__buffer = buffer;
                        this.__offset = offset;
                        VTable4.Create<TInputBuffer>(buffer, offset, out this.__vtable);
                        base.OnFlatSharpDeserialized(__CtorContext);
                    }
                }

                global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(Samples.SchemaFilesExample2.OtherTable);
                global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
                global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => this.__buffer;
                bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => true;


                public override System.String? name
                {
                    get
                    {
                        checked
                        {
                            return ReadIndex0Value(this.__buffer, this.__offset, this.__vtable);
                        }
                    }

                    set
                    {
                        checked
                        {
                            throw new NotMutableException();
                        }
                    }
                }

                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static System.String? ReadIndex0Value(
                    TInputBuffer buffer,
                    int offset,
                    VTable4 vtable)
                {
                    checked
                    {


                        int absoluteLocation;
                        {
                            int relativeOffset = vtable.OffsetOf(buffer, 0);
                            if (relativeOffset == 0)
                            {
                                return null;
                            }

                            absoluteLocation = offset + relativeOffset;
                        }

                        return Read_8fc5c31f5fcf4b929a98a6fe8086360e(buffer, absoluteLocation);
                    }
                }
            }



            private static void WriteInlineValueOf_ee18549ef93440a9aeed527f9f1b5e04<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                global::Samples.SchemaFilesExample2.OtherTable value,
                int offset
                , SerializationContext context
                ) where TSpanWriter : ISpanWriter
            {
                checked
                {

                    int tableStart = context.AllocateSpace(11, sizeof(int));
                    spanWriter.WriteUOffset(span, offset, tableStart);
                    int currentOffset = tableStart + sizeof(int); // skip past vtable soffset_t.

                    int vtableLength = 4;
                    Span<byte> vtable = stackalloc byte[6];

                    var index0Value = value.name;

                    var index0Offset = tableStart;
                    if (!(index0Value is null))
                    {

                        currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 4);
                        index0Offset = currentOffset;
                        currentOffset += 4;

                        vtableLength = 6;
                    }

                    spanWriter.WriteUShort(vtable, (ushort)(index0Offset - tableStart), 4);
                    int tableLength = currentOffset - tableStart;
                    context.Offset -= 11 - tableLength;
                    spanWriter.WriteUShort(vtable, (ushort)vtableLength, 0);
                    spanWriter.WriteUShort(vtable, (ushort)tableLength, sizeof(ushort));
                    int vtablePosition = context.FinishVTable(span, vtable.Slice(0, vtableLength));
                    spanWriter.WriteInt(span, tableStart - vtablePosition, tableStart);

                    if (index0Offset != tableStart)
                    {


                        WriteInlineValueOf_8fc5c31f5fcf4b929a98a6fe8086360e(spanWriter, span, index0Value!, index0Offset, context, tableMetadata_08c8ee1f8ac04c74801825340b4056f8.name);

                    }

                }
            }

            private static class tableMetadata_08c8ee1f8ac04c74801825340b4056f8
            {

                public static readonly TableFieldContext name = new TableFieldContext(
                    "Samples.SchemaFilesExample2.OtherTable.name",
                    false,
                    false);
            }



            private static int GetMaxSizeOf_8fc5c31f5fcf4b929a98a6fe8086360e(global::System.String value)
            {
                checked
                {
                    return SerializationHelpers.GetMaxSize(value);
                }
            }

            private static global::System.String Read_8fc5c31f5fcf4b929a98a6fe8086360e<TInputBuffer>(
                TInputBuffer buffer,
                int offset
                ) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return buffer.ReadString(offset);
                }
            }

            private static void WriteInlineValueOf_8fc5c31f5fcf4b929a98a6fe8086360e<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                global::System.String value,
                int offset
                , SerializationContext context
                , TableFieldContext fieldContext) where TSpanWriter : ISpanWriter
            {
                checked
                {

                    spanWriter.WriteString(
                        span,
                        value,
                        offset,
                        context);

                }
            }
        }

        #endregion
    }

}

