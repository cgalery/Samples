/*
 * Copyright 2020 James Courtney
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

namespace Samples.SchemaFilesExample2;

attribute "fs_serializer";
attribute "fs_vector";

enum CatBreed : int { Ragdoll, EuropeanShorthair, NorwegianForestCat, BritishShorthair }

// CatsAndOwnersContainer's serializer is generated at build time here, which means we don't need
// to use FlatBufferSerializer to make one for us at runtime. It also means we don't need
// a reference to the "FlatSharp" nuget package. Only "FlatSharp.Runtime" is required.
// Runtime vs build-time generated serializers perform equally well.

/// This comment is injected into C# because of the '///'
table CatsAndOwnersContainer (fs_serializer:"greedymutable") // Valid values are: "greedy", "greedymutable", "progressive", and "lazy"
{
  cats:[Cat] (fs_vector:"Array");  // Can also be IReadOnlyList,Array,Memory,ReadOnlyMemory
  owners:[Owner] (fs_vector:"IList");
}

table Cat (fs_serializer) { // default options used when none are specified.
  UniqueIdentfier:string;
  AgeInYears:uint;
  IsFluffy:bool;
  Name:string;
  Breed:CatBreed;
  Whatever:long;
  GramsOfFoodPerDay:double;
  Children:[Cat] (fs_vector:"Array");
}

table Owner (fs_serializer) {
  Name:string;
  Cats:[Cat] (fs_vector:"IList");
}

///struct Bar {
///  parent:Foo;
///  time:int;
///  ratio:float;
///  size:ushort;
///}

root_type CatsAndOwnersContainer;
